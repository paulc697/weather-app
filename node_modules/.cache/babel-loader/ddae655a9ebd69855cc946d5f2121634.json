{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulcunningham/react-projects/weather-app/src/Pages/SearchDetails/SearchDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { SYMBOLS } from \"../../Constants/Constants\";\nimport useStyles from \"../styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useParams } from \"react-router-dom\";\n\nconst SearchDetails = () => {\n  _s();\n\n  const classes = useStyles();\n  const [weather, setWeather] = useState(null);\n  const {\n    location: urlGroupId\n  } = useParams();\n  const [location, setLocation] = useState(\"\");\n  const [isToday, setIsToday] = useState(true);\n  useEffect(() => {\n    if (urlGroupId) {\n      setLocation(urlGroupId);\n    }\n  }, [urlGroupId]);\n  useEffect(() => {\n    if (location !== \"\") {\n      getToday();\n    }\n  }, [location]);\n\n  const getToday = () => {\n    axios.get(`${process.env.REACT_APP_WEATHER_API}=${location}`).then(data => {\n      setWeather(data.data);\n      console.log(data.data);\n      setIsToday(true);\n    }).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: weather && isToday === true && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          className: classes.title,\n          children: [\"Today in \", weather.location.name, \", \", \"\", \" \", weather.location.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: weather.current.is_day === 1 ? classes.night : classes.root,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h4\",\n              className: classes.title,\n              children: [weather.location.name, \" \", \"\", \" \", weather.location.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            justify: \"space-between\",\n            justifyContent: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                className: classes.media,\n                image: weather.current.condition.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.degrees,\n                children: [weather.current.temp_c, \" \", SYMBOLS.DEGREES]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.subTitle,\n                children: [\"Wind: \", weather.current.wind_mph, \" kph \", \"\", \"Pressure: \", weather.current.pressure_mb, \" mb\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.degrees,\n              children: weather.current.condition.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchDetails, \"gv2Bx5Q2FFlBnzHX6OCEvwcsdF0=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = SearchDetails;\nexport default SearchDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchDetails\");","map":{"version":3,"sources":["/Users/paulcunningham/react-projects/weather-app/src/Pages/SearchDetails/SearchDetails.js"],"names":["React","useEffect","useState","axios","Card","CardContent","CardMedia","Typography","SYMBOLS","useStyles","Grid","useParams","SearchDetails","classes","weather","setWeather","location","urlGroupId","setLocation","isToday","setIsToday","getToday","get","process","env","REACT_APP_WEATHER_API","then","data","console","log","catch","error","title","name","country","current","is_day","night","root","media","condition","icon","degrees","temp_c","DEGREES","subTitle","wind_mph","pressure_mb","text"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAEc,IAAAA,QAAQ,EAAEC;AAAZ,MAA2BN,SAAS,EAA1C;AACA,QAAM,CAACK,QAAD,EAAWE,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,UAAJ,EAAgB;AACdC,MAAAA,WAAW,CAACD,UAAD,CAAX;AACD;AACF,GAJQ,EAIN,CAACA,UAAD,CAJM,CAAT;AAMAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,QAAQ,KAAK,EAAjB,EAAqB;AACnBK,MAAAA,QAAQ;AACT;AACF,GAJQ,EAIN,CAACL,QAAD,CAJM,CAAT;;AAMA,QAAMK,QAAQ,GAAG,MAAM;AACrBlB,IAAAA,KAAK,CACFmB,GADH,CACQ,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,IAAGT,QAAS,EADxD,EAEGU,IAFH,CAESC,IAAD,IAAU;AACdZ,MAAAA,UAAU,CAACY,IAAI,CAACA,IAAN,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAjB;AACAP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KANH,EAOGU,KAPH,CAOUC,KAAD,IAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAPpB;AAQD,GATD;;AAWA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA,cACGjB,OAAO,IAAIK,OAAO,KAAK,IAAvB,iBACC;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAEN,OAAO,CAACmB,KAA5C;AAAA,kCACYlB,OAAO,CAACE,QAAR,CAAiBiB,IAD7B,QACqC,EADrC,OAC0CnB,OAAO,CAACE,QAAR,CAAiBkB,OAD3D;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,IAAD;AACE,QAAA,SAAS,EACPpB,OAAO,CAACqB,OAAR,CAAgBC,MAAhB,KAA2B,CAA3B,GAA+BvB,OAAO,CAACwB,KAAvC,GAA+CxB,OAAO,CAACyB,IAF3D;AAAA,+BAKE,QAAC,WAAD;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,YAAY,MAAxB;AAAyB,cAAA,OAAO,EAAC,IAAjC;AAAsC,cAAA,SAAS,EAAEzB,OAAO,CAACmB,KAAzD;AAAA,yBACGlB,OAAO,CAACE,QAAR,CAAiBiB,IADpB,OAC2B,EAD3B,OACgCnB,OAAO,CAACE,QAAR,CAAiBkB,OADjD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,IAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,OAAO,EAAE,CAFX;AAGE,YAAA,OAAO,EAAC,eAHV;AAIE,YAAA,cAAc,EAAC,QAJjB;AAAA,oCAME,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,SAAS,EAAErB,OAAO,CAAC0B,KADrB;AAEE,gBAAA,KAAK,EAAEzB,OAAO,CAACqB,OAAR,CAAgBK,SAAhB,CAA0BC;AAFnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBANF,eAYE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAE5B,OAAO,CAAC6B,OAA/B;AAAA,2BACG5B,OAAO,CAACqB,OAAR,CAAgBQ,MADnB,OAC4BnC,OAAO,CAACoC,OADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAZF,eAiBE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAE/B,OAAO,CAACgC,QAA/B;AAAA,qCACS/B,OAAO,CAACqB,OAAR,CAAgBW,QADzB,WACwC,EADxC,gBAEahC,OAAO,CAACqB,OAAR,CAAgBY,WAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eA8BE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAElC,OAAO,CAAC6B,OAA/B;AAAA,wBACG5B,OAAO,CAACqB,OAAR,CAAgBK,SAAhB,CAA0BQ;AAD7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD,CArFD;;GAAMpC,a;UACYH,S,EAEiBE,S;;;KAH7BC,a;AAsFN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { SYMBOLS } from \"../../Constants/Constants\";\nimport useStyles from \"../styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useParams } from \"react-router-dom\";\n\nconst SearchDetails = () => {\n  const classes = useStyles();\n  const [weather, setWeather] = useState(null);\n  const { location: urlGroupId } = useParams();\n  const [location, setLocation] = useState(\"\");\n  const [isToday, setIsToday] = useState(true);\n\n  useEffect(() => {\n    if (urlGroupId) {\n      setLocation(urlGroupId);\n    }\n  }, [urlGroupId]);\n\n  useEffect(() => {\n    if (location !== \"\") {\n      getToday();\n    }\n  }, [location]);\n\n  const getToday = () => {\n    axios\n      .get(`${process.env.REACT_APP_WEATHER_API}=${location}`)\n      .then((data) => {\n        setWeather(data.data);\n        console.log(data.data);\n        setIsToday(true);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <Grid container spacing={2}>\n      {weather && isToday === true && (\n        <>\n          <Grid item xs={12}>\n            <Typography variant=\"h2\" className={classes.title}>\n              Today in {weather.location.name}, {\"\"} {weather.location.country}\n            </Typography>\n          </Grid>\n          <Card\n            className={\n              weather.current.is_day === 1 ? classes.night : classes.root\n            }\n          >\n            <CardContent>\n              <Grid item xs={12}>\n                <Typography gutterBottom variant=\"h4\" className={classes.title}>\n                  {weather.location.name} {\"\"} {weather.location.country}\n                </Typography>\n              </Grid>\n              <Grid\n                container\n                spacing={2}\n                justify=\"space-between\"\n                justifyContent=\"center\"\n              >\n                <Grid item xs={4}>\n                  <CardMedia\n                    className={classes.media}\n                    image={weather.current.condition.icon}\n                  />\n                </Grid>\n                <Grid item xs={4}>\n                  <Typography className={classes.degrees}>\n                    {weather.current.temp_c} {SYMBOLS.DEGREES}\n                  </Typography>\n                </Grid>\n                <Grid item xs={4}>\n                  <Typography className={classes.subTitle}>\n                    Wind: {weather.current.wind_mph} kph {\"\"}\n                    Pressure: {weather.current.pressure_mb} mb\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography className={classes.degrees}>\n                  {weather.current.condition.text}\n                </Typography>\n              </Grid>\n            </CardContent>\n          </Card>\n        </>\n      )}\n    </Grid>\n  );\n};\nexport default SearchDetails;\n"]},"metadata":{},"sourceType":"module"}