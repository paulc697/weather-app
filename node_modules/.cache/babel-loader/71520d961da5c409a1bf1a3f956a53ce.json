{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulcunningham/react-projects/weather-app/src/Components/Favourites/Favourites.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport useStyles from \"../../Pages/SearchDetails/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport StarOutlineIcon from \"@material-ui/icons/StarOutline\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Favourites = ({\n  location,\n  isFavourite,\n  weather\n}) => {\n  _s();\n\n  const [favourite, setFavourite] = useState(false);\n  const classes = useStyles();\n  useEffect(() => {\n    if (isFavourite) try {\n      const item = localStorage.getItem(location, `weatherState`);\n\n      if (item) {\n        const value = JSON.parse(item);\n\n        if (typeof value === \"boolean\") {\n          setFavourite(value);\n        }\n      }\n    } catch (error) {\n      setFavourite(false);\n      console.log(error);\n    }\n  }, [location, isFavourite]);\n  useEffect(() => {\n    if (location) {\n      localStorage.setItem(location, `weatherState`, JSON.stringify(favourite));\n    }\n  }, [favourite, location]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: isFavourite ? /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          className: classes.title,\n          children: [\"Today in \", weather.location.name, \", \", \"\", \" \", weather.location.country, /*#__PURE__*/_jsxDEV(Button, {\n            onClick: favourite,\n            children: isFavourite ? /*#__PURE__*/_jsxDEV(StarIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 32\n            }, this) : /*#__PURE__*/_jsxDEV(StarOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Favourites, \"e70AJF0F81dpUW56SLKNakpyV0Y=\", false, function () {\n  return [useStyles];\n});\n\n_c = Favourites;\nexport default Favourites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favourites\");","map":{"version":3,"sources":["/Users/paulcunningham/react-projects/weather-app/src/Components/Favourites/Favourites.js"],"names":["React","useEffect","useState","useStyles","Grid","Box","StarOutlineIcon","StarIcon","Button","Typography","Favourites","location","isFavourite","weather","favourite","setFavourite","classes","item","localStorage","getItem","value","JSON","parse","error","console","log","setItem","stringify","title","name","country"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA;AAAzB,CAAD,KAAwC;AAAA;;AACzD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMc,OAAO,GAAGb,SAAS,EAAzB;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,WAAJ,EACE,IAAI;AACF,YAAMK,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqBR,QAArB,EAAgC,cAAhC,CAAb;;AAEA,UAAIM,IAAJ,EAAU;AACR,cAAMG,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAd;;AACA,YAAI,OAAOG,KAAP,KAAiB,SAArB,EAAgC;AAC9BL,UAAAA,YAAY,CAACK,KAAD,CAAZ;AACD;AACF;AACF,KATD,CASE,OAAOG,KAAP,EAAc;AACdR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACJ,GAfQ,EAeN,CAACZ,QAAD,EAAWC,WAAX,CAfM,CAAT;AAiBAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,QAAJ,EAAc;AACZO,MAAAA,YAAY,CAACQ,OAAb,CAAqBf,QAArB,EAAgC,cAAhC,EAA+CU,IAAI,CAACM,SAAL,CAAeb,SAAf,CAA/C;AACD;AACF,GAJQ,EAIN,CAACA,SAAD,EAAYH,QAAZ,CAJM,CAAT;AAMA,sBACE,QAAC,IAAD;AAAA,cACGC,WAAW,gBACV,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAEI,OAAO,CAACY,KAA5C;AAAA,kCACYf,OAAO,CAACF,QAAR,CAAiBkB,IAD7B,QACqC,EADrC,OAC0ChB,OAAO,CAACF,QAAR,CAAiBmB,OAD3D,eAEE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEhB,SAAjB;AAAA,sBACGF,WAAW,gBAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,oBAAH,gBAAkB,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADhC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADU,GAWR;AAZN;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA1CD;;GAAMF,U;UAEYP,S;;;KAFZO,U;AA4CN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport useStyles from \"../../Pages/SearchDetails/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport StarOutlineIcon from \"@material-ui/icons/StarOutline\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Favourites = ({ location, isFavourite, weather }) => {\n  const [favourite, setFavourite] = useState(false);\n  const classes = useStyles();\n  useEffect(() => {\n    if (isFavourite)\n      try {\n        const item = localStorage.getItem(location, `weatherState`);\n\n        if (item) {\n          const value = JSON.parse(item);\n          if (typeof value === \"boolean\") {\n            setFavourite(value);\n          }\n        }\n      } catch (error) {\n        setFavourite(false);\n        console.log(error);\n      }\n  }, [location, isFavourite]);\n\n  useEffect(() => {\n    if (location) {\n      localStorage.setItem(location, `weatherState`, JSON.stringify(favourite));\n    }\n  }, [favourite, location]);\n\n  return (\n    <Grid>\n      {isFavourite ? (\n        <Grid item xs={12}>\n          <Box mt={2}>\n            <Typography variant=\"h2\" className={classes.title}>\n              Today in {weather.location.name}, {\"\"} {weather.location.country}\n              <Button onClick={favourite}>\n                {isFavourite ? <StarIcon /> : <StarOutlineIcon />}\n              </Button>\n            </Typography>\n          </Box>\n        </Grid>\n      ) : null}\n    </Grid>\n  );\n};\n\nexport default Favourites;\n"]},"metadata":{},"sourceType":"module"}