{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulcunningham/react-projects/weather-app/src/Pages/SearchDetails/SearchDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { SHORT_DATE_FORMAT, VALID_DATE_FORMAT, LONG_DATE_TIME_FORMAT, LONG_DATE_FORMAT, SYMBOLS } from \"../../Constants/Constants\";\nimport useStyles from \"./styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useParams } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport format from \"date-fns/format\";\nimport HourlyWeather from \"../../Components/HourlyWeather/HourlyWeather\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport Today from \"../../Components/Today/Today\";\nimport StarOutlineIcon from \"@material-ui/icons/StarOutline\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport Button from \"@material-ui/core/Button\";\nimport useIsMobile from \"../../Components/useIsMobile/useIsMobile\";\nimport History from \"../../Components/History/History\";\nimport Search from \"../../Components/Search/Search\";\n\nconst SearchDetails = () => {\n  _s();\n\n  const isMobile = useIsMobile();\n  const classes = useStyles();\n  const [weather, setWeather] = useState(null);\n  const {\n    location: urlGroupId\n  } = useParams();\n  const [location, setLocation] = useState(\"\");\n  const [isToday, setIsToday] = useState(true);\n  const [days] = useState(3);\n  const [isForecast, setIsForecast] = useState(false);\n  const [dailyForecast, setDailyForecast] = useState({});\n  const [forecast, setForecast] = useState(null);\n  const [activeTab, setActiveTab] = useState(0);\n  const [isHistory, setIsHistory] = useState(false);\n  const [history, setHistory] = useState(null);\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const [historyForecast, setHistoryForecast] = useState({});\n  const [date, setDate] = useState(format(new Date(selectedDate), VALID_DATE_FORMAT));\n  const [degrees, setDegrees] = useState(true);\n  const [farenheight, setFarenheight] = useState(false);\n  const [isFavourite, setIsFavourite] = useState(false);\n  useEffect(() => {\n    if (urlGroupId) {\n      setLocation(urlGroupId);\n    }\n  }, [urlGroupId]);\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  const getHistory = useCallback(async () => {\n    const newDate = new Date(selectedDate).toISOString().split(\"T\")[0];\n    setDate(newDate);\n    axios.get(`${process.env.REACT_APP_HISTORY_API}=${location}&dt=${date}`).then(data => {\n      setHistoryForecast(data.data.forecast);\n      setIsHistory(true);\n      setHistory(data.data);\n    }).catch(error => console.log(error));\n  }, [location, selectedDate, date]);\n  const getToday = useCallback(async () => {\n    axios.get(`${process.env.REACT_APP_WEATHER_API}=${location}`).then(data => {\n      setWeather(data.data);\n      setIsToday(true);\n    }).catch(error => console.log(error));\n  }, [location]);\n  const getForecast = useCallback(async () => {\n    axios.get(`${process.env.REACT_APP_FORECAST_API}=${location}&days=${days}`).then(data => {\n      setForecast(data.data);\n      setDailyForecast(data.data.forecast);\n      setIsForecast(true);\n    }).catch(error => console.log(error));\n  }, [days, location]);\n  useEffect(() => {\n    if (location !== \"\") {\n      getToday();\n      getForecast();\n      getHistory();\n    }\n  }, [location, getForecast, getHistory, getToday]);\n  useEffect(() => {\n    try {\n      if (weather) {\n        const item = localStorage.getItem(weather.location.name, location);\n\n        if (item === weather.location.name) {\n          setIsFavourite(true);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, [location, weather]);\n\n  const setDegree = () => {\n    setDegrees(true);\n    setFarenheight(false);\n  };\n\n  const setFaren = () => {\n    setDegrees(false);\n    setFarenheight(true);\n  };\n\n  useEffect(() => {\n    if (isFavourite === true) {\n      localStorage.setItem(weather.location.name, location);\n    }\n  });\n  useEffect(() => {\n    if (weather && isFavourite === false) {\n      localStorage.removeItem(weather.location.name);\n    }\n  });\n\n  const favourite = () => {\n    if (isFavourite !== true) {\n      setIsFavourite(true);\n    } else {\n      setIsFavourite(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    justify: \"space-around\",\n    children: weather === null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: isMobile ? classes.mobileTitle : classes.title,\n          children: [\"No results found\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: weather && isToday ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: isMobile ? classes.mobileTitle : classes.title,\n                children: [\"Today in \", weather.location.name, \", \", \"\", \" \", weather.location.country, /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: favourite,\n                  children: isFavourite ? /*#__PURE__*/_jsxDEV(StarIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 40\n                  }, this) : /*#__PURE__*/_jsxDEV(StarOutlineIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 55\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.time,\n              children: [\"Last Updated: \", \"\", format(new Date(weather.current.last_updated), LONG_DATE_TIME_FORMAT)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 9,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                mb: 2,\n                mt: 2,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  className: classes.subTitle,\n                  children: format(new Date(weather.location.localtime), LONG_DATE_FORMAT)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"text\",\n                size: \"small\",\n                onClick: setDegree,\n                className: degrees ? classes.buttonActive : classes.buttonInactive,\n                children: SYMBOLS.DEGREES\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"text\",\n                size: \"small\",\n                onClick: setFaren,\n                className: farenheight ? classes.buttonActive : classes.buttonInactive,\n                children: SYMBOLS.FAHRENHEIT\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Today, {\n            weather: weather,\n            degrees: degrees,\n            forecast: forecast,\n            isForecast: isForecast,\n            dailyForecast: dailyForecast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"No Results Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        direction: \"row\",\n        justify: \"space-between\",\n        children: [isForecast === true ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: isMobile ? classes.mobileTitle : classes.title,\n                children: \"Forecast\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n            value: activeTab,\n            className: classes.tabs,\n            onChange: handleTabChange,\n            indicatorColor: \"primary\",\n            \"aria-label\": \"Weather Tab\",\n            variant: \"scrollable\",\n            children: dailyForecast.forecastday.map((forecastday, index) => {\n              return /*#__PURE__*/_jsxDEV(Tab, {\n                label: format(new Date(forecastday.date), SHORT_DATE_FORMAT)\n              }, `${forecastday.date}_tab_${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"No forecast Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: forecast && isForecast === true && dailyForecast.forecastday.map((forecastday, index) => {\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: activeTab === index && /*#__PURE__*/_jsxDEV(HourlyWeather, {\n                  tabNumber: index,\n                  degrees: degrees,\n                  forecastday: forecastday\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 27\n                }, this)\n              }, `display_weather_details_${forecastday.date}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: history && isHistory ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            mb: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h2\",\n              className: isMobile ? classes.mobileTitle : classes.title,\n              children: \"View History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              label: \"Select Date\",\n              autoOk: true,\n              disableFuture: true,\n              disableToolbar: true,\n              maxDate: new Date(),\n              format: \"yyyy/MM/dd\",\n              value: date,\n              invalidDateMessage: \"noooooo\",\n              onChange: date => handleDateChange(date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(History, {\n            degrees: degrees,\n            historyForecast: historyForecast,\n            isHistory: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 15\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchDetails, \"swMBb3yfhe6sn8SC7Ch+4qeAA1M=\", false, function () {\n  return [useIsMobile, useStyles, useParams];\n});\n\n_c = SearchDetails;\nexport default SearchDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchDetails\");","map":{"version":3,"sources":["/Users/paulcunningham/react-projects/weather-app/src/Pages/SearchDetails/SearchDetails.js"],"names":["React","useEffect","useState","useCallback","axios","Typography","SHORT_DATE_FORMAT","VALID_DATE_FORMAT","LONG_DATE_TIME_FORMAT","LONG_DATE_FORMAT","SYMBOLS","useStyles","Grid","useParams","Box","format","HourlyWeather","Tab","Tabs","DatePicker","Today","StarOutlineIcon","StarIcon","Button","useIsMobile","History","Search","SearchDetails","isMobile","classes","weather","setWeather","location","urlGroupId","setLocation","isToday","setIsToday","days","isForecast","setIsForecast","dailyForecast","setDailyForecast","forecast","setForecast","activeTab","setActiveTab","isHistory","setIsHistory","history","setHistory","selectedDate","handleDateChange","Date","historyForecast","setHistoryForecast","date","setDate","degrees","setDegrees","farenheight","setFarenheight","isFavourite","setIsFavourite","handleTabChange","event","newValue","getHistory","newDate","toISOString","split","get","process","env","REACT_APP_HISTORY_API","then","data","catch","error","console","log","getToday","REACT_APP_WEATHER_API","getForecast","REACT_APP_FORECAST_API","item","localStorage","getItem","name","setDegree","setFaren","setItem","removeItem","favourite","mobileTitle","title","country","time","current","last_updated","subTitle","localtime","buttonActive","buttonInactive","DEGREES","FAHRENHEIT","tabs","forecastday","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  SHORT_DATE_FORMAT,\n  VALID_DATE_FORMAT,\n  LONG_DATE_TIME_FORMAT,\n  LONG_DATE_FORMAT,\n  SYMBOLS,\n} from \"../../Constants/Constants\";\nimport useStyles from \"./styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useParams } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport format from \"date-fns/format\";\nimport HourlyWeather from \"../../Components/HourlyWeather/HourlyWeather\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport Today from \"../../Components/Today/Today\";\nimport StarOutlineIcon from \"@material-ui/icons/StarOutline\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport Button from \"@material-ui/core/Button\";\nimport useIsMobile from \"../../Components/useIsMobile/useIsMobile\";\nimport History from \"../../Components/History/History\";\n\nimport Search from \"../../Components/Search/Search\";\n\nconst SearchDetails = () => {\n  const isMobile = useIsMobile();\n  const classes = useStyles();\n  const [weather, setWeather] = useState(null);\n  const { location: urlGroupId } = useParams();\n  const [location, setLocation] = useState(\"\");\n  const [isToday, setIsToday] = useState(true);\n  const [days] = useState(3);\n  const [isForecast, setIsForecast] = useState(false);\n  const [dailyForecast, setDailyForecast] = useState({});\n  const [forecast, setForecast] = useState(null);\n  const [activeTab, setActiveTab] = useState(0);\n  const [isHistory, setIsHistory] = useState(false);\n  const [history, setHistory] = useState(null);\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const [historyForecast, setHistoryForecast] = useState({});\n  const [date, setDate] = useState(\n    format(new Date(selectedDate), VALID_DATE_FORMAT)\n  );\n\n  const [degrees, setDegrees] = useState(true);\n  const [farenheight, setFarenheight] = useState(false);\n  const [isFavourite, setIsFavourite] = useState(false);\n\n  useEffect(() => {\n    if (urlGroupId) {\n      setLocation(urlGroupId);\n    }\n  }, [urlGroupId]);\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  const getHistory = useCallback(async () => {\n    const newDate = new Date(selectedDate).toISOString().split(\"T\")[0];\n    setDate(newDate);\n    axios\n      .get(`${process.env.REACT_APP_HISTORY_API}=${location}&dt=${date}`)\n      .then((data) => {\n        setHistoryForecast(data.data.forecast);\n        setIsHistory(true);\n        setHistory(data.data);\n      })\n      .catch((error) => console.log(error));\n  }, [location, selectedDate, date]);\n\n  const getToday = useCallback(async () => {\n    axios\n      .get(`${process.env.REACT_APP_WEATHER_API}=${location}`)\n      .then((data) => {\n        setWeather(data.data);\n        setIsToday(true);\n      })\n      .catch((error) => console.log(error));\n  }, [location]);\n\n  const getForecast = useCallback(async () => {\n    axios\n      .get(`${process.env.REACT_APP_FORECAST_API}=${location}&days=${days}`)\n      .then((data) => {\n        setForecast(data.data);\n        setDailyForecast(data.data.forecast);\n\n        setIsForecast(true);\n      })\n\n      .catch((error) => console.log(error));\n  }, [days, location]);\n\n  useEffect(() => {\n    if (location !== \"\") {\n      getToday();\n      getForecast();\n      getHistory();\n    }\n  }, [location, getForecast, getHistory, getToday]);\n\n  useEffect(() => {\n    try {\n      if (weather) {\n        const item = localStorage.getItem(weather.location.name, location);\n        if (item === weather.location.name) {\n          setIsFavourite(true);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, [location, weather]);\n\n  const setDegree = () => {\n    setDegrees(true);\n    setFarenheight(false);\n  };\n\n  const setFaren = () => {\n    setDegrees(false);\n    setFarenheight(true);\n  };\n\n  useEffect(() => {\n    if (isFavourite === true) {\n      localStorage.setItem(weather.location.name, location);\n    }\n  });\n\n  useEffect(() => {\n    if (weather && isFavourite === false) {\n      localStorage.removeItem(weather.location.name);\n    }\n  });\n\n  const favourite = () => {\n    if (isFavourite !== true) {\n      setIsFavourite(true);\n    } else {\n      setIsFavourite(false);\n    }\n  };\n\n  return (\n    <Grid container spacing={2} direction=\"row\" justify=\"space-around\">\n      {weather === null ? (\n        <>\n          <Grid item xs={12}>\n            <Typography\n              className={isMobile ? classes.mobileTitle : classes.title}\n            >\n              No results found{\" \"}\n            </Typography>\n          </Grid>\n          <Search />\n        </>\n      ) : (\n        <>\n          <Grid item xs={12}>\n            {weather && isToday ? (\n              <>\n                <Grid item xs={12}>\n                  <Box mt={2}>\n                    <Typography\n                      className={isMobile ? classes.mobileTitle : classes.title}\n                    >\n                      Today in {weather.location.name}, {\"\"}{\" \"}\n                      {weather.location.country}\n                      <Button onClick={favourite}>\n                        {isFavourite ? <StarIcon /> : <StarOutlineIcon />}\n                      </Button>\n                    </Typography>\n                  </Box>\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Typography variant=\"h5\" className={classes.time}>\n                    Last Updated: {\"\"}\n                    {format(\n                      new Date(weather.current.last_updated),\n                      LONG_DATE_TIME_FORMAT\n                    )}\n                  </Typography>\n                </Grid>\n\n                <Grid container spacing={2} direction=\"row\">\n                  <Grid item xs={9}>\n                    <Box mb={2} mt={2}>\n                      <Typography variant=\"h5\" className={classes.subTitle}>\n                        {format(\n                          new Date(weather.location.localtime),\n                          LONG_DATE_FORMAT\n                        )}\n                      </Typography>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={3}>\n                    <Button\n                      variant=\"text\"\n                      size=\"small\"\n                      onClick={setDegree}\n                      className={\n                        degrees ? classes.buttonActive : classes.buttonInactive\n                      }\n                    >\n                      {SYMBOLS.DEGREES}\n                    </Button>\n                    <Button\n                      variant=\"text\"\n                      size=\"small\"\n                      onClick={setFaren}\n                      className={\n                        farenheight\n                          ? classes.buttonActive\n                          : classes.buttonInactive\n                      }\n                    >\n                      {SYMBOLS.FAHRENHEIT}\n                    </Button>\n                  </Grid>\n                </Grid>\n                <Today\n                  weather={weather}\n                  degrees={degrees}\n                  forecast={forecast}\n                  isForecast={isForecast}\n                  dailyForecast={dailyForecast}\n                />\n              </>\n            ) : (\n              <Typography>No Results Found</Typography>\n            )}\n          </Grid>\n\n          <Grid container spacing={2} direction=\"row\" justify=\"space-between\">\n            {isForecast === true ? (\n              <Grid item xs={12}>\n                <Grid item xs={12}>\n                  <Box mt={2}>\n                    <Typography\n                      className={isMobile ? classes.mobileTitle : classes.title}\n                    >\n                      Forecast\n                    </Typography>\n                  </Box>\n                </Grid>\n                <Tabs\n                  value={activeTab}\n                  className={classes.tabs}\n                  onChange={handleTabChange}\n                  indicatorColor=\"primary\"\n                  aria-label=\"Weather Tab\"\n                  variant=\"scrollable\"\n                >\n                  {dailyForecast.forecastday.map((forecastday, index) => {\n                    return (\n                      <Tab\n                        key={`${forecastday.date}_tab_${index}`}\n                        label={format(\n                          new Date(forecastday.date),\n                          SHORT_DATE_FORMAT\n                        )}\n                      />\n                    );\n                  })}\n                </Tabs>\n              </Grid>\n            ) : (\n              <Typography>No forecast Available</Typography>\n            )}\n\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                {forecast &&\n                  isForecast === true &&\n                  dailyForecast.forecastday.map((forecastday, index) => {\n                    return (\n                      <React.Fragment\n                        key={`display_weather_details_${forecastday.date}`}\n                      >\n                        {activeTab === index && (\n                          <HourlyWeather\n                            tabNumber={index}\n                            degrees={degrees}\n                            forecastday={forecastday}\n                          />\n                        )}\n                      </React.Fragment>\n                    );\n                  })}\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid container>\n            {/* HISTORY */}\n            {history && isHistory ? (\n              <Grid item xs={12}>\n                <Box mt={4} mb={2}>\n                  <Typography\n                    variant=\"h2\"\n                    className={isMobile ? classes.mobileTitle : classes.title}\n                  >\n                    View History\n                  </Typography>\n                </Box>\n                <Grid item xs={12}>\n                  <DatePicker\n                    label=\"Select Date\"\n                    autoOk\n                    disableFuture\n                    disableToolbar\n                    maxDate={new Date()}\n                    format=\"yyyy/MM/dd\"\n                    value={date}\n                    invalidDateMessage=\"noooooo\"\n                    onChange={(date) => handleDateChange(date)}\n                  />\n                </Grid>\n\n                <History\n                  degrees={degrees}\n                  historyForecast={historyForecast}\n                  isHistory={true}\n                />\n              </Grid>\n            ) : null}\n          </Grid>\n        </>\n      )}\n    </Grid>\n  );\n};\nexport default SearchDetails;\n"]},"metadata":{},"sourceType":"module"}