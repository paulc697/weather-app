{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulcunningham/react-projects/weather-app/src/Pages/Favourites/Favourites.js\",\n    _s = $RefreshSig$();\n\nimport { Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Favourites = () => {\n  _s();\n\n  const [favourite, setFavourite] = useState(false);\n  const [location, setLocation] = useState(\"\");\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    try {\n      const item = localStorage.getItem(\"weatherState\");\n      console.log(item);\n\n      if (item) {\n        const value = item;\n        setLocation(value);\n        setFavourite(true);\n      }\n    } catch (error) {\n      setFavourite(false);\n      console.log(error);\n    }\n  }, [location]);\n  console.log(location);\n  const getToday = useCallback(async () => {\n    axios.get(`${process.env.REACT_APP_WEATHER_API}=${location}`).then(data => {\n      setWeather(data.data);\n      setIsToday(true);\n    }).catch(error => console.log(error));\n  }, [location]);\n  useEffect(() => {\n    if (favourite === true) {\n      getToday();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"Your Favourites\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Favourites, \"wHA5QyJS+R3ZIFKI9W40oqTw7dg=\");\n\n_c = Favourites;\nexport default Favourites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favourites\");","map":{"version":3,"sources":["/Users/paulcunningham/react-projects/weather-app/src/Pages/Favourites/Favourites.js"],"names":["Typography","axios","React","useEffect","useState","Favourites","favourite","setFavourite","location","setLocation","weather","setWeather","item","localStorage","getItem","console","log","value","error","getToday","useCallback","get","process","env","REACT_APP_WEATHER_API","then","data","setIsToday","catch"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACF,YAAMS,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,UAAIA,IAAJ,EAAU;AACR,cAAMK,KAAK,GAAGL,IAAd;AACAH,QAAAA,WAAW,CAACQ,KAAD,CAAX;AACAV,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,KARD,CAQE,OAAOW,KAAP,EAAc;AACdX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,GAbQ,EAaN,CAACV,QAAD,CAbM,CAAT;AAcAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AAEA,QAAMW,QAAQ,GAAGC,WAAW,CAAC,YAAY;AACvCnB,IAAAA,KAAK,CACFoB,GADH,CACQ,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,IAAGhB,QAAS,EADxD,EAEGiB,IAFH,CAESC,IAAD,IAAU;AACdf,MAAAA,UAAU,CAACe,IAAI,CAACA,IAAN,CAAV;AACAC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KALH,EAMGC,KANH,CAMUV,KAAD,IAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CANpB;AAOD,GAR2B,EAQzB,CAACV,QAAD,CARyB,CAA5B;AAUAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,SAAS,KAAK,IAAlB,EAAwB;AACtBa,MAAAA,QAAQ;AACT;AACF,GAJQ,EAIN,EAJM,CAAT;AAMA,sBAAO,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAtCD;;GAAMd,U;;KAAAA,U;AAwCN,eAAeA,UAAf","sourcesContent":["import { Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nconst Favourites = () => {\n  const [favourite, setFavourite] = useState(false);\n  const [location, setLocation] = useState(\"\");\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    try {\n      const item = localStorage.getItem(\"weatherState\");\n      console.log(item);\n      if (item) {\n        const value = item;\n        setLocation(value);\n        setFavourite(true);\n      }\n    } catch (error) {\n      setFavourite(false);\n      console.log(error);\n    }\n  }, [location]);\n  console.log(location);\n\n  const getToday = useCallback(async () => {\n    axios\n      .get(`${process.env.REACT_APP_WEATHER_API}=${location}`)\n      .then((data) => {\n        setWeather(data.data);\n        setIsToday(true);\n      })\n      .catch((error) => console.log(error));\n  }, [location]);\n\n  useEffect(() => {\n    if (favourite === true) {\n      getToday();\n    }\n  }, []);\n\n  return <Typography>Your Favourites</Typography>;\n};\n\nexport default Favourites;\n"]},"metadata":{},"sourceType":"module"}