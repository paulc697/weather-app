{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulcunningham/react-projects/weather-app/src/Components/Search/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\nconst Search = () => {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [searchData, setSearchData] = useState({});\n  const [data, setData] = useState(false); //Search event\n\n  const weatherInput = e => {\n    setInput(e.target.value);\n  };\n\n  const searchWeather = () => {\n    axios.get(`${process.env.REACT_APP_SEARCH_API}=${input}`).then(data => {\n      setSearchData(data.data);\n      setData(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: \"2\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: weatherInput,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchWeather,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), data === true && searchData.map(location => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h4\",\n                className: classes.text,\n                children: weather.location.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                className: classes.text,\n                children: weather.location.country\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.text,\n                children: [weather.current.temp_c, \" \", SYMBOLS.DEGREES, \" \", \"\", weather.current.temp_f, \" \", SYMBOLS.FAHRENHEIT]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.text,\n                children: weather.current.condition.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n              className: classes.media,\n              image: weather.current.condition.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: location.name.split(\",\")[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"G/e/yLEqFu6zXJuqPVTxiUGI4J8=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/paulcunningham/react-projects/weather-app/src/Components/Search/Search.js"],"names":["React","useState","axios","Grid","Typography","Link","Card","CardContent","CardMedia","Search","input","setInput","searchData","setSearchData","data","setData","weatherInput","e","target","value","searchWeather","get","process","env","REACT_APP_SEARCH_API","then","map","location","classes","text","weather","name","country","current","temp_c","SYMBOLS","DEGREES","temp_f","FAHRENHEIT","condition","media","icon","split"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,KAAD,CAAhC,CAHmB,CAInB;;AACA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AAC1BN,IAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AAC1BlB,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,oBAAqB,IAAGd,KAAM,EAAvD,EAA0De,IAA1D,CAAgEX,IAAD,IAAU;AACvED,MAAAA,aAAa,CAACC,IAAI,CAACA,IAAN,CAAb;AACAC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAHD;AAID,GALD;;AAOA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,GAAxB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,8BACE;AAAO,QAAA,QAAQ,EAAEC,YAAjB;AAA+B,QAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEI,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKGN,IAAI,KAAK,IAAT,IACCF,UAAU,CAACc,GAAX,CAAgBC,QAAD,IAAc;AAC3B,0BACE;AAAA,+BACE,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD;AAAA,oCACE,QAAC,WAAD;AAAA,sCACE,QAAC,UAAD;AACE,gBAAA,YAAY,MADd;AAEE,gBAAA,OAAO,EAAC,IAFV;AAGE,gBAAA,SAAS,EAAEC,OAAO,CAACC,IAHrB;AAAA,0BAKGC,OAAO,CAACH,QAAR,CAAiBI;AALpB;AAAA;AAAA;AAAA;AAAA,sBADF,eAQE,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,IAApB;AAAyB,gBAAA,SAAS,EAAEH,OAAO,CAACC,IAA5C;AAAA,0BACGC,OAAO,CAACH,QAAR,CAAiBK;AADpB;AAAA;AAAA;AAAA;AAAA,sBARF,eAWE,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAEJ,OAAO,CAACC,IAA/B;AAAA,2BACGC,OAAO,CAACG,OAAR,CAAgBC,MADnB,OAC4BC,OAAO,CAACC,OADpC,OAC8C,EAD9C,EAEGN,OAAO,CAACG,OAAR,CAAgBI,MAFnB,OAE4BF,OAAO,CAACG,UAFpC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF,eAeE,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAEV,OAAO,CAACC,IAA/B;AAAA,0BACGC,OAAO,CAACG,OAAR,CAAgBM,SAAhB,CAA0BV;AAD7B;AAAA;AAAA;AAAA;AAAA,sBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAoBE,QAAC,SAAD;AACE,cAAA,SAAS,EAAED,OAAO,CAACY,KADrB;AAEE,cAAA,KAAK,EAAEV,OAAO,CAACG,OAAR,CAAgBM,SAAhB,CAA0BE;AAFnC;AAAA;AAAA;AAAA;AAAA,oBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA0BE,QAAC,UAAD;AAAA,sBAAad,QAAQ,CAACI,IAAT,CAAcW,KAAd,CAAoB,GAApB,EAAyB,CAAzB;AAAb;AAAA;AAAA;AAAA;AAAA,kBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAgCD,KAjCD,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CA3DD;;GAAMjC,M;;KAAAA,M;AA6DN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nconst Search = () => {\n  const [input, setInput] = useState(\"\");\n  const [searchData, setSearchData] = useState({});\n  const [data, setData] = useState(false);\n  //Search event\n  const weatherInput = (e) => {\n    setInput(e.target.value);\n  };\n\n  const searchWeather = () => {\n    axios.get(`${process.env.REACT_APP_SEARCH_API}=${input}`).then((data) => {\n      setSearchData(data.data);\n      setData(true);\n    });\n  };\n\n  return (\n    <Grid container spacing=\"2\">\n      <Grid item xs={6}>\n        <input onChange={weatherInput} type=\"text\" />\n        <button onClick={searchWeather}>Search</button>\n      </Grid>\n      {data === true &&\n        searchData.map((location) => {\n          return (\n            <>\n              <Grid>\n                <Card>\n                  <CardContent>\n                    <Typography\n                      gutterBottom\n                      variant=\"h4\"\n                      className={classes.text}\n                    >\n                      {weather.location.name}\n                    </Typography>\n                    <Typography variant=\"h5\" className={classes.text}>\n                      {weather.location.country}\n                    </Typography>\n                    <Typography className={classes.text}>\n                      {weather.current.temp_c} {SYMBOLS.DEGREES} {\"\"}\n                      {weather.current.temp_f} {SYMBOLS.FAHRENHEIT}\n                    </Typography>\n                    <Typography className={classes.text}>\n                      {weather.current.condition.text}\n                    </Typography>\n                  </CardContent>\n                  <CardMedia\n                    className={classes.media}\n                    image={weather.current.condition.icon}\n                  />\n                </Card>\n                <Typography>{location.name.split(\",\")[0]}</Typography>\n              </Grid>\n            </>\n          );\n        })}\n    </Grid>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}