{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulcunningham/react-projects/weather-app/src/Pages/Favourites/Favourites.js\",\n    _s = $RefreshSig$();\n\nimport { Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState, useCallback } from \"react\";\n\nconst Favourites = () => {\n  _s();\n\n  const [favourite, setFavourite] = useState(false);\n  const [location, setLocation] = useState(\"\");\n  const [weather, setWeather] = useState(null);\n  const [isToday, setIsToday] = useState(false);\n  useEffect(() => {\n    try {\n      const item = localStorage.getItem(location);\n      console.log(item);\n\n      if (item) {\n        const value = item;\n        setLocation(value);\n        setFavourite(true);\n      }\n    } catch (error) {\n      setFavourite(false);\n      console.log(error);\n    }\n  }, [location, weather.location.name]);\n  console.log(location);\n  const getToday = useCallback(async () => {\n    axios.get(`${process.env.REACT_APP_WEATHER_API}=${location}`).then(data => {\n      setWeather(data.data);\n      setIsToday(true);\n    }).catch(error => console.log(error));\n  }, [location]);\n  useEffect(() => {\n    if (favourite === true) {\n      getToday();\n    }\n  }, [favourite, getToday]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Your Favourites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), favourite && isToday ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      children: [\"Today in \", weather.location.name, \", \", \"\", \" \", weather.location.country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(Favourites, \"3HrGSLvLnk1IrYlPKvbB3ukoG5I=\");\n\n_c = Favourites;\nexport default Favourites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favourites\");","map":{"version":3,"sources":["/Users/paulcunningham/react-projects/weather-app/src/Pages/Favourites/Favourites.js"],"names":["Typography","axios","React","useEffect","useState","useCallback","Favourites","favourite","setFavourite","location","setLocation","weather","setWeather","isToday","setIsToday","item","localStorage","getItem","console","log","value","error","name","getToday","get","process","env","REACT_APP_WEATHER_API","then","data","catch","country"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACF,YAAMY,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqBR,QAArB,CAAb;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,UAAIA,IAAJ,EAAU;AACR,cAAMK,KAAK,GAAGL,IAAd;AACAL,QAAAA,WAAW,CAACU,KAAD,CAAX;AACAZ,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,KARD,CAQE,OAAOa,KAAP,EAAc;AACdb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,GAbQ,EAaN,CAACZ,QAAD,EAAWE,OAAO,CAACF,QAAR,CAAiBa,IAA5B,CAbM,CAAT;AAcAJ,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AAEA,QAAMc,QAAQ,GAAGlB,WAAW,CAAC,YAAY;AACvCJ,IAAAA,KAAK,CACFuB,GADH,CACQ,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,IAAGlB,QAAS,EADxD,EAEGmB,IAFH,CAESC,IAAD,IAAU;AACdjB,MAAAA,UAAU,CAACiB,IAAI,CAACA,IAAN,CAAV;AACAf,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KALH,EAMGgB,KANH,CAMUT,KAAD,IAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CANpB;AAOD,GAR2B,EAQzB,CAACZ,QAAD,CARyB,CAA5B;AAUAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,SAAS,KAAK,IAAlB,EAAwB;AACtBgB,MAAAA,QAAQ;AACT;AACF,GAJQ,EAIN,CAAChB,SAAD,EAAYgB,QAAZ,CAJM,CAAT;AAMA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGhB,SAAS,IAAIM,OAAb,gBACC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA,8BACYF,OAAO,CAACF,QAAR,CAAiBa,IAD7B,QACqC,EADrC,OAC0CX,OAAO,CAACF,QAAR,CAAiBsB,OAD3D;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAIG,IANN;AAAA,kBADF;AAUD,CAhDD;;GAAMzB,U;;KAAAA,U;AAkDN,eAAeA,UAAf","sourcesContent":["import { Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nconst Favourites = () => {\n  const [favourite, setFavourite] = useState(false);\n  const [location, setLocation] = useState(\"\");\n  const [weather, setWeather] = useState(null);\n  const [isToday, setIsToday] = useState(false);\n\n  useEffect(() => {\n    try {\n      const item = localStorage.getItem(location);\n      console.log(item);\n      if (item) {\n        const value = item;\n        setLocation(value);\n        setFavourite(true);\n      }\n    } catch (error) {\n      setFavourite(false);\n      console.log(error);\n    }\n  }, [location, weather.location.name]);\n  console.log(location);\n\n  const getToday = useCallback(async () => {\n    axios\n      .get(`${process.env.REACT_APP_WEATHER_API}=${location}`)\n      .then((data) => {\n        setWeather(data.data);\n        setIsToday(true);\n      })\n      .catch((error) => console.log(error));\n  }, [location]);\n\n  useEffect(() => {\n    if (favourite === true) {\n      getToday();\n    }\n  }, [favourite, getToday]);\n\n  return (\n    <>\n      <Typography>Your Favourites</Typography>\n      {favourite && isToday ? (\n        <Typography variant=\"h2\">\n          Today in {weather.location.name}, {\"\"} {weather.location.country}\n        </Typography>\n      ) : null}\n    </>\n  );\n};\n\nexport default Favourites;\n"]},"metadata":{},"sourceType":"module"}