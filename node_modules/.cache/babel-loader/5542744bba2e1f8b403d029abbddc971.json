{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulcunningham/react-projects/weather-app/src/Pages/SearchDetails/SearchDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { SYMBOLS, LONG_DATE_FORMAT, LONG_DATE_TIME_FORMAT, SHORT_DATE_FORMAT, VALID_DATE_FORMAT } from \"../../Constants/Constants\";\nimport useStyles from \"./styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useParams } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport format from \"date-fns/format\";\nimport HourlyWeather from \"../../Components/HourlyWeather/HourlyWeather\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport useIsMobile from \"../../Components/useIsMobile/useIsMobile\";\nimport History from \"../../Components/History/History\";\nimport Button from \"@material-ui/core/Button\";\n\nconst SearchDetails = () => {\n  _s();\n\n  const isMobile = useIsMobile();\n  const classes = useStyles();\n  const [weather, setWeather] = useState(null);\n  const {\n    location: urlGroupId\n  } = useParams();\n  const [location, setLocation] = useState(\"\");\n  const [isToday, setIsToday] = useState(true);\n  const [days] = useState(3);\n  const [isForecast, setIsForecast] = useState(false);\n  const [dailyForecast, setDailyForecast] = useState({});\n  const [forecast, setForecast] = useState(null);\n  const [activeTab, setActiveTab] = useState(0);\n  const [validDate, setValidDate] = useState(\"\");\n  const [isHistory, setIsHistory] = useState(false);\n  const [history, setHistory] = useState(null);\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const [historyForecast, setHistoryForecast] = useState({});\n  const [date, setDate] = useState(format(new Date(selectedDate), VALID_DATE_FORMAT));\n  const [degrees, setDegrees] = useState(true);\n  const [farenheight, setFarenheight] = useState(false);\n  useEffect(() => {\n    if (urlGroupId) {\n      setLocation(urlGroupId);\n    }\n  }, [urlGroupId]);\n\n  const dateToday = () => {\n    const date = format(new Date(), VALID_DATE_FORMAT);\n    setValidDate(date);\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  const getHistory = useCallback(async () => {\n    const newDate = new Date(selectedDate).toISOString().split(\"T\")[0];\n    setDate(newDate);\n    axios.get(`${process.env.REACT_APP_HISTORY_API}=${location}&dt=${date}`).then(data => {\n      setHistory(data.data);\n      setHistoryForecast(data.data.forecast);\n      setIsHistory(true);\n      console.log(data.data.forecast);\n    }).catch(error => console.log(error));\n  }, [location, selectedDate, date]);\n  const getToday = useCallback(async () => {\n    axios.get(`${process.env.REACT_APP_WEATHER_API}=${location}`).then(data => {\n      setWeather(data.data);\n      setIsToday(true);\n    }).catch(error => console.log(error));\n  }, [location]);\n  const getForecast = useCallback(async () => {\n    axios.get(`${process.env.REACT_APP_FORECAST_API}=${location}&days=${days}`).then(data => {\n      setForecast(data.data);\n      setDailyForecast(data.data.forecast);\n      setIsForecast(true);\n    }).catch(error => console.log(error));\n  }, [days, location]);\n  useEffect(() => {\n    if (location !== \"\") {\n      getToday();\n      getForecast();\n      dateToday();\n      getHistory();\n    }\n  }, [location, getForecast, getHistory, getToday]);\n\n  const setDegree = () => {\n    setDegrees(true);\n    setFarenheight(false);\n  };\n\n  const setFaren = () => {\n    setDegrees(false);\n    setFarenheight(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    justify: \"space-around\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: weather && isToday ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h2\",\n              className: classes.title,\n              children: [\"Today in \", weather.location.name, \", \", \"\", \" \", weather.location.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            className: classes.time,\n            children: [\"Last Updated: \", \"\", format(new Date(weather.current.last_updated), LONG_DATE_TIME_FORMAT)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            mb: 2,\n            mt: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.subTitle,\n              children: format(new Date(weather.location.localtime), LONG_DATE_FORMAT)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          direction: \"row\",\n          justify: \"space-around\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 1,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: classes.media,\n                src: weather.current.condition.icon,\n                alt: \"weather\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 2,\n            xs: 6,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.degrees,\n              children: degrees ? weather.current.temp_c + SYMBOLS.DEGREES : weather.current.temp_f + SYMBOLS.FAHRENHEIT\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.condition,\n              children: weather.current.condition.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 6,\n            xs: 12,\n            children: forecast && isForecast === true && dailyForecast.forecastday.map(forecastday => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: validDate === forecastday.date ? /*#__PURE__*/_jsxDEV(Card, {\n                  className: classes.root,\n                  raised: true,\n                  children: /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      mb: 2,\n                      ml: 4,\n                      mr: -4,\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        spacing: 2,\n                        justify: \"space-between\",\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subTitle,\n                            children: [degrees ? forecastday.day.mintemp_c + SYMBOLS.DEGREES : forecastday.day.mintemp_f + SYMBOLS.FAHRENHEIT, \" \"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 190,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subText,\n                            children: \"Low\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 197,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 189,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subTitle,\n                            children: degrees ? forecastday.day.maxwind_mph + \" mph\" : forecastday.day.maxwind_kph + \" kph\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 202,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subText,\n                            children: \"Wind\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 207,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 201,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subTitle,\n                            children: forecastday.astro.sunrise\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 212,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subText,\n                            children: \"Sunrise\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 215,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 211,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 184,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      ml: 4,\n                      mr: -4,\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        spacing: 2,\n                        justify: \"space-between\",\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subTitle,\n                            children: degrees ? forecastday.day.maxtemp_c + SYMBOLS.DEGREES : forecastday.day.maxtemp_f + SYMBOLS.FAHRENHEIT\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 229,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subText,\n                            children: \"High\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 236,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 228,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subTitle,\n                            children: degrees ? forecast.current.feelslike_c + SYMBOLS.DEGREES : forecast.current.feelslike_f + SYMBOLS.FAHRENHEIT\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 241,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subText,\n                            children: \"Feels Like\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 248,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 240,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subTitle,\n                            children: forecastday.astro.sunset\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 253,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subText,\n                            children: \"Sunset\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 256,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 252,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 27\n                }, this) : null\n              }, void 0, false);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No weather today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      direction: \"row\",\n      justify: \"space-between\",\n      children: [isForecast === true ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            className: classes.title,\n            children: \"Forecast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          value: activeTab,\n          className: classes.tabs,\n          onChange: handleTabChange,\n          indicatorColor: \"primary\",\n          \"aria-label\": \"Weather Tab\",\n          variant: \"scrollable\",\n          children: dailyForecast.forecastday.map((forecastday, index) => {\n            return /*#__PURE__*/_jsxDEV(Tab, {\n              label: format(new Date(forecastday.date), SHORT_DATE_FORMAT)\n            }, `${forecastday.date}_tab_${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No forecast Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: forecast && isForecast === true && dailyForecast.forecastday.map((forecastday, index) => {\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: activeTab === index && /*#__PURE__*/_jsxDEV(HourlyWeather, {\n                tabNumber: index,\n                degrees: degrees,\n                forecastday: forecastday\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 23\n              }, this)\n            }, `display_weather_details_${forecastday.date}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: history && isHistory ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            mb: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h2\",\n              className: classes.title,\n              children: \"View History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n              label: \"Select Date\",\n              clearable: true,\n              minDate: new Date().getDate() - 7,\n              maxDate: new Date(),\n              format: \"yyyy/MM/dd\",\n              value: date,\n              onChange: date => handleDateChange(date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(History, {\n            degrees: degrees,\n            historyForecast: historyForecast,\n            isHistory: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 17\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No forecast available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchDetails, \"njFUD4CbsUUt8lg5y9Crf0S8zJQ=\", false, function () {\n  return [useIsMobile, useStyles, useParams];\n});\n\n_c = SearchDetails;\nexport default SearchDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchDetails\");","map":{"version":3,"sources":["/Users/paulcunningham/react-projects/weather-app/src/Pages/SearchDetails/SearchDetails.js"],"names":["React","useEffect","useState","useCallback","axios","Card","CardContent","Typography","SYMBOLS","LONG_DATE_FORMAT","LONG_DATE_TIME_FORMAT","SHORT_DATE_FORMAT","VALID_DATE_FORMAT","useStyles","Grid","useParams","Box","format","HourlyWeather","Tab","Tabs","KeyboardDatePicker","useIsMobile","History","Button","SearchDetails","isMobile","classes","weather","setWeather","location","urlGroupId","setLocation","isToday","setIsToday","days","isForecast","setIsForecast","dailyForecast","setDailyForecast","forecast","setForecast","activeTab","setActiveTab","validDate","setValidDate","isHistory","setIsHistory","history","setHistory","selectedDate","handleDateChange","Date","historyForecast","setHistoryForecast","date","setDate","degrees","setDegrees","farenheight","setFarenheight","dateToday","handleTabChange","event","newValue","getHistory","newDate","toISOString","split","get","process","env","REACT_APP_HISTORY_API","then","data","console","log","catch","error","getToday","REACT_APP_WEATHER_API","getForecast","REACT_APP_FORECAST_API","setDegree","setFaren","title","name","country","time","current","last_updated","subTitle","localtime","media","condition","icon","temp_c","DEGREES","temp_f","FAHRENHEIT","text","forecastday","map","root","day","mintemp_c","mintemp_f","subText","maxwind_mph","maxwind_kph","astro","sunrise","maxtemp_c","maxtemp_f","feelslike_c","feelslike_f","sunset","tabs","index","getDate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  SYMBOLS,\n  LONG_DATE_FORMAT,\n  LONG_DATE_TIME_FORMAT,\n  SHORT_DATE_FORMAT,\n  VALID_DATE_FORMAT,\n} from \"../../Constants/Constants\";\nimport useStyles from \"./styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useParams } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport format from \"date-fns/format\";\nimport HourlyWeather from \"../../Components/HourlyWeather/HourlyWeather\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport useIsMobile from \"../../Components/useIsMobile/useIsMobile\";\nimport History from \"../../Components/History/History\";\nimport Button from \"@material-ui/core/Button\";\n\nconst SearchDetails = () => {\n  const isMobile = useIsMobile();\n  const classes = useStyles();\n  const [weather, setWeather] = useState(null);\n  const { location: urlGroupId } = useParams();\n  const [location, setLocation] = useState(\"\");\n  const [isToday, setIsToday] = useState(true);\n  const [days] = useState(3);\n  const [isForecast, setIsForecast] = useState(false);\n  const [dailyForecast, setDailyForecast] = useState({});\n  const [forecast, setForecast] = useState(null);\n  const [activeTab, setActiveTab] = useState(0);\n  const [validDate, setValidDate] = useState(\"\");\n  const [isHistory, setIsHistory] = useState(false);\n  const [history, setHistory] = useState(null);\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const [historyForecast, setHistoryForecast] = useState({});\n  const [date, setDate] = useState(\n    format(new Date(selectedDate), VALID_DATE_FORMAT)\n  );\n\n  const [degrees, setDegrees] = useState(true);\n  const [farenheight, setFarenheight] = useState(false);\n\n  useEffect(() => {\n    if (urlGroupId) {\n      setLocation(urlGroupId);\n    }\n  }, [urlGroupId]);\n\n  const dateToday = () => {\n    const date = format(new Date(), VALID_DATE_FORMAT);\n    setValidDate(date);\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  const getHistory = useCallback(async () => {\n    const newDate = new Date(selectedDate).toISOString().split(\"T\")[0];\n    setDate(newDate);\n    axios\n      .get(`${process.env.REACT_APP_HISTORY_API}=${location}&dt=${date}`)\n      .then((data) => {\n        setHistory(data.data);\n        setHistoryForecast(data.data.forecast);\n        setIsHistory(true);\n        console.log(data.data.forecast);\n      })\n      .catch((error) => console.log(error));\n  }, [location, selectedDate, date]);\n\n  const getToday = useCallback(async () => {\n    axios\n      .get(`${process.env.REACT_APP_WEATHER_API}=${location}`)\n      .then((data) => {\n        setWeather(data.data);\n\n        setIsToday(true);\n      })\n      .catch((error) => console.log(error));\n  }, [location]);\n\n  const getForecast = useCallback(async () => {\n    axios\n      .get(`${process.env.REACT_APP_FORECAST_API}=${location}&days=${days}`)\n      .then((data) => {\n        setForecast(data.data);\n        setDailyForecast(data.data.forecast);\n        setIsForecast(true);\n      })\n\n      .catch((error) => console.log(error));\n  }, [days, location]);\n\n  useEffect(() => {\n    if (location !== \"\") {\n      getToday();\n      getForecast();\n      dateToday();\n      getHistory();\n    }\n  }, [location, getForecast, getHistory, getToday]);\n\n  const setDegree = () => {\n    setDegrees(true);\n    setFarenheight(false);\n\n  };\n\n  const setFaren = () => {\n    setDegrees(false);\n    setFarenheight(true);\n  };\n  return (\n    <Grid container spacing={2} direction=\"row\" justify=\"space-around\">\n      <Grid item xs={12}>\n        {weather && isToday ? (\n          <>\n            <Grid item xs={12}>\n              <Box mt={2}>\n                <Typography variant=\"h2\" className={classes.title}>\n                  Today in {weather.location.name}, {\"\"}{\" \"}\n                  {weather.location.country}\n                </Typography>\n              </Box>\n            </Grid>\n\n                <Grid item xs={12}>\n                <Typography variant=\"h5\" className={classes.time}>\n                  Last Updated: {\"\"}\n                  {format(\n                    new Date(weather.current.last_updated),\n                    LONG_DATE_TIME_FORMAT\n                  )}\n                </Typography>\n                </Grid>\n\n            <Grid item xs={12}>\n              <Box mb={2} mt={2}>\n                <Typography variant=\"h5\" className={classes.subTitle}>\n                  {format(\n                    new Date(weather.location.localtime),\n                    LONG_DATE_FORMAT\n                  )}\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid container spacing={2} direction=\"row\" justify=\"space-around\">\n              <Grid item md={1} xs={6}>\n                <Box>\n                  <img\n                    className={classes.media}\n                    src={weather.current.condition.icon}\n                    alt=\"weather\"\n                  ></img>\n                </Box>\n              </Grid>\n              <Grid item md={2} xs={6}>\n                <Typography className={classes.degrees}>\n                  {degrees ? weather.current.temp_c + SYMBOLS.DEGREES : weather.current.temp_f + SYMBOLS.FAHRENHEIT}\n                </Typography>\n                <Typography className={classes.condition}>\n                  {weather.current.condition.text}\n                </Typography>\n              </Grid>\n\n              <Grid item md={6} xs={12}>\n                {forecast &&\n                  isForecast === true &&\n                  dailyForecast.forecastday.map((forecastday) => {\n                    return (\n                      <>\n                        {validDate === forecastday.date ? (\n                          <Card className={classes.root} raised>\n                            <CardContent>\n                              <Box mb={2} ml={4} mr={-4}>\n                                <Grid\n                                  container\n                                  spacing={2}\n                                  justify=\"space-between\"\n                                >\n                                  <Grid item xs={4}>\n                                    <Typography className={classes.subTitle}>\n                                      {degrees\n                                        ? forecastday.day.mintemp_c +\n                                          SYMBOLS.DEGREES\n                                        : forecastday.day.mintemp_f +\n                                          SYMBOLS.FAHRENHEIT}{\" \"}\n                                    </Typography>\n                                    <Typography className={classes.subText}>\n                                      Low\n                                    </Typography>\n                                  </Grid>\n                                  <Grid item xs={4}>\n                                    <Typography className={classes.subTitle}>\n                                      {degrees\n                                        ? forecastday.day.maxwind_mph + \" mph\"\n                                        : forecastday.day.maxwind_kph + \" kph\"}\n                                    </Typography>\n                                    <Typography className={classes.subText}>\n                                      Wind\n                                    </Typography>\n                                  </Grid>\n                                  <Grid item xs={4}>\n                                    <Typography className={classes.subTitle}>\n                                      {forecastday.astro.sunrise}\n                                    </Typography>\n                                    <Typography className={classes.subText}>\n                                      Sunrise\n                                    </Typography>\n                                  </Grid>\n                                </Grid>\n                              </Box>\n\n                              <Box ml={4} mr={-4}>\n                                <Grid\n                                  container\n                                  spacing={2}\n                                  justify=\"space-between\"\n                                >\n                                  <Grid item xs={4}>\n                                    <Typography className={classes.subTitle}>\n                                      {degrees\n                                        ? forecastday.day.maxtemp_c +\n                                          SYMBOLS.DEGREES\n                                        : forecastday.day.maxtemp_f +\n                                          SYMBOLS.FAHRENHEIT}\n                                    </Typography>\n                                    <Typography className={classes.subText}>\n                                      High\n                                    </Typography>\n                                  </Grid>\n                                  <Grid item xs={4}>\n                                    <Typography className={classes.subTitle}>\n                                      {degrees\n                                        ? forecast.current.feelslike_c +\n                                          SYMBOLS.DEGREES\n                                        : forecast.current.feelslike_f +\n                                          SYMBOLS.FAHRENHEIT}\n                                    </Typography>\n                                    <Typography className={classes.subText}>\n                                      Feels Like\n                                    </Typography>\n                                  </Grid>\n                                  <Grid item xs={4}>\n                                    <Typography className={classes.subTitle}>\n                                      {forecastday.astro.sunset}\n                                    </Typography>\n                                    <Typography className={classes.subText}>\n                                      Sunset\n                                    </Typography>\n                                  </Grid>\n                                </Grid>\n                              </Box>\n                            </CardContent>\n                          </Card>\n                        ) : null}\n                      </>\n                    );\n                  })}\n              </Grid>\n            </Grid>\n          </>\n        ) : (\n          <Typography>No weather today</Typography>\n        )}\n      </Grid>\n\n      <Grid container spacing={2} direction=\"row\" justify=\"space-between\">\n        {isForecast === true ? (\n          <Grid item xs={12}>\n            <Grid item xs={12}>\n              <Typography variant=\"h2\" className={classes.title}>\n                Forecast\n              </Typography>\n            </Grid>\n            <Tabs\n              value={activeTab}\n              className={classes.tabs}\n              onChange={handleTabChange}\n              indicatorColor=\"primary\"\n              aria-label=\"Weather Tab\"\n              variant=\"scrollable\"\n            >\n              {dailyForecast.forecastday.map((forecastday, index) => {\n                return (\n                  <Tab\n                    key={`${forecastday.date}_tab_${index}`}\n                    label={format(\n                      new Date(forecastday.date),\n                      SHORT_DATE_FORMAT\n                    )}\n                  />\n                );\n              })}\n            </Tabs>\n          </Grid>\n        ) : (\n          <Typography>No forecast Available</Typography>\n        )}\n\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            {forecast &&\n              isForecast === true &&\n              dailyForecast.forecastday.map((forecastday, index) => {\n                return (\n                  <React.Fragment\n                    key={`display_weather_details_${forecastday.date}`}\n                  >\n                    {activeTab === index && (\n                      <HourlyWeather\n                        tabNumber={index}\n                        degrees={degrees}\n                        forecastday={forecastday}\n                      />\n                    )}\n                  </React.Fragment>\n                );\n              })}\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid container>\n        {/* HISTORY */}\n        {history && isHistory ? (\n              <>\n                <Grid item xs={12}>\n                  <Box mt={4} mb={2}>\n                    <Typography variant=\"h2\" className={classes.title}>\n                      View History\n                    </Typography>\n                  </Box>\n                  <Grid item xs={12}>\n                    <KeyboardDatePicker\n                      label=\"Select Date\"\n                      clearable\n                      minDate={new Date().getDate()-7}\n                      maxDate={new Date()}\n                      format=\"yyyy/MM/dd\"\n                      value={date}\n                      onChange={(date) => handleDateChange(date)}\n                    />\n                  </Grid>\n\n                  <History\n                    degrees={degrees}\n                    historyForecast={historyForecast}\n                    isHistory={true}\n                  />\n                </Grid>\n              </>\n        ) : (\n          <Typography>No forecast available</Typography>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\nexport default SearchDetails;\n"]},"metadata":{},"sourceType":"module"}