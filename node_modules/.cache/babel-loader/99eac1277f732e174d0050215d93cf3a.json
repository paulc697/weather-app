{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulcunningham/react-projects/weather-app/src/Components/Search/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport \"./search.css\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 1500,\n    backgroundColor: \"#989898\"\n  },\n  text: {\n    color: \"#FFFFFF\"\n  }\n}));\n\nconst Search = () => {\n  _s();\n\n  const classes = useStyles();\n  const [input, setInput] = useState(\"\");\n  const [searchData, setSearchData] = useState({});\n  const [data, setData] = useState(false); //Search event\n\n  const weatherInput = e => {\n    setInput(e.target.value);\n  };\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_SEARCH_API}=${input}`).then(data => {\n      setSearchData(data.data);\n      setData(true);\n    });\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          autocomplete: \"off\",\n          action: `/search/${input}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"searchTerm\",\n            onChange: weatherInput,\n            type: \"text\",\n            placeholder: \"Type in a city, country or postcode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: data === true && searchData.map((location, key) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.root,\n                  children: /*#__PURE__*/_jsxDEV(List, {\n                    dense: true,\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/search/${location.name.split(\",\")[0]}`,\n                      component: RouterLink,\n                      underline: \"none\",\n                      children: /*#__PURE__*/_jsxDEV(ListItem, {\n                        button: true,\n                        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                          className: classes.text,\n                          inset: true,\n                          primary: location.name.split(\",\")[0] + \", \" + location.country\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 64,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 63,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 58,\n                      columnNumber: 27\n                    }, this)\n                  }, location.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"sZlngsX89jqpGTcomX6coQOInkE=\", false, function () {\n  return [useStyles];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/paulcunningham/react-projects/weather-app/src/Components/Search/Search.js"],"names":["React","useEffect","useState","axios","Grid","Link","RouterLink","ListItemText","List","ListItem","makeStyles","useStyles","theme","root","width","maxWidth","backgroundColor","text","color","Search","classes","input","setInput","searchData","setSearchData","data","setData","weatherInput","e","target","value","get","process","env","REACT_APP_SEARCH_API","then","map","location","key","name","split","country","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport \"./search.css\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 1500,\n    backgroundColor: \"#989898\",\n  },\n  text: {\n    color: \"#FFFFFF\",\n  },\n}));\nconst Search = () => {\n  const classes = useStyles();\n  const [input, setInput] = useState(\"\");\n  const [searchData, setSearchData] = useState({});\n  const [data, setData] = useState(false);\n\n  //Search event\n  const weatherInput = (e) => {\n    setInput(e.target.value);\n  };\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_SEARCH_API}=${input}`).then((data) => {\n      setSearchData(data.data);\n      setData(true);\n    });\n  }, [input]);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <div className=\"wrap\">\n          <form autocomplete=\"off\" action={`/search/${input}`}>\n            <input\n              className=\"searchTerm\"\n              onChange={weatherInput}\n              type=\"text\"\n              placeholder=\"Type in a city, country or postcode\"\n            />\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                {data === true &&\n                  searchData.map((location, key) => {\n                    return (\n                      <div className={classes.root}>\n                        <List dense={true} key={location.id}>\n                          <Link\n                            to={`/search/${location.name.split(\",\")[0]}`}\n                            component={RouterLink}\n                            underline=\"none\"\n                          >\n                            <ListItem button>\n                              <ListItemText\n                                className={classes.text}\n                                inset\n                                primary={\n                                  location.name.split(\",\")[0] +\n                                  \", \" +\n                                  location.country\n                                }\n                              />\n                            </ListItem>\n                          </Link>\n                        </List>\n                      </div>\n                    );\n                  })}\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}