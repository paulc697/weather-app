{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulcunningham/react-projects/weather-app/src/Components/Today/Today.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useStyles from \"../../Pages/SearchDetails/styles\";\nimport format from \"date-fns/format\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport { SYMBOLS, VALID_DATE_FORMAT } from \"../../Constants/Constants\";\nimport useIsMobile from \"../useIsMobile/useIsMobile\";\n\nconst Today = ({\n  weather,\n  degrees,\n  forecast,\n  isForecast,\n  dailyForecast\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const isMobile = useIsMobile();\n  const [validDate, setValidDate] = useState(\"\");\n\n  const dateToday = () => {\n    const date = format(new Date(), VALID_DATE_FORMAT);\n    setValidDate(date);\n  };\n\n  useEffect(() => {\n    dateToday();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      direction: \"row\",\n      justify: \"space-around\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 1,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.media,\n            src: weather.current.condition.icon,\n            alt: \"weather\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 2,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.degrees,\n          children: degrees ? weather.current.temp_c + SYMBOLS.DEGREES : weather.current.temp_f + SYMBOLS.FAHRENHEIT\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.condition,\n          children: weather.current.condition.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 6,\n        xs: 9,\n        children: forecast && isForecast === true && dailyForecast.forecastday.map(forecastday => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: validDate === forecastday.date ? /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.root,\n              raised: true,\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  mb: 2,\n                  ml: isMobile ? 0 : 4,\n                  mr: isMobile ? 0 : -4,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 2,\n                    justify: \"space-between\",\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 4,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.subTitle,\n                        children: [degrees ? forecastday.day.mintemp_c + SYMBOLS.DEGREES : forecastday.day.mintemp_f + SYMBOLS.FAHRENHEIT, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 64,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.subText,\n                        children: \"Low\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 70,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 4,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.subTitle,\n                        children: degrees ? forecastday.day.maxwind_mph + \" mph\" : forecastday.day.maxwind_kph + \" kph\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 75,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.subText,\n                        children: \"Wind\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 80,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 4,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.subTitle,\n                        children: forecastday.astro.sunrise\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 85,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.subText,\n                        children: \"Sunrise\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 88,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  ml: isMobile ? 0 : 4,\n                  mr: isMobile ? 0 : -4,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 2,\n                    justify: \"space-between\",\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 4,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.subTitle,\n                        children: degrees ? forecastday.day.maxtemp_c + SYMBOLS.DEGREES : forecastday.day.maxtemp_f + SYMBOLS.FAHRENHEIT\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 98,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.subText,\n                        children: \"High\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 104,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 4,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.subTitle,\n                        children: degrees ? forecast.current.feelslike_c + SYMBOLS.DEGREES : forecast.current.feelslike_f + SYMBOLS.FAHRENHEIT\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 109,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.subText,\n                        children: \"Feels Like\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 116,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 4,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.subTitle,\n                        children: forecastday.astro.sunset\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.subText,\n                        children: \"Sunset\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 124,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this) : null\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Today, \"sCjb91H7Qe+ZHVHZUkRtyFEbc0A=\", false, function () {\n  return [useStyles, useIsMobile];\n});\n\n_c = Today;\nexport default Today;\n\nvar _c;\n\n$RefreshReg$(_c, \"Today\");","map":{"version":3,"sources":["/Users/paulcunningham/react-projects/weather-app/src/Components/Today/Today.js"],"names":["React","useEffect","useState","Card","CardContent","Typography","useStyles","format","Grid","Box","SYMBOLS","VALID_DATE_FORMAT","useIsMobile","Today","weather","degrees","forecast","isForecast","dailyForecast","classes","isMobile","validDate","setValidDate","dateToday","date","Date","media","current","condition","icon","temp_c","DEGREES","temp_f","FAHRENHEIT","text","forecastday","map","root","subTitle","day","mintemp_c","mintemp_f","subText","maxwind_mph","maxwind_kph","astro","sunrise","maxtemp_c","maxtemp_f","feelslike_c","feelslike_f","sunset"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useStyles from \"../../Pages/SearchDetails/styles\";\nimport format from \"date-fns/format\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport { SYMBOLS, VALID_DATE_FORMAT } from \"../../Constants/Constants\";\nimport useIsMobile from \"../useIsMobile/useIsMobile\";\n\nconst Today = ({ weather, degrees, forecast, isForecast, dailyForecast }) => {\n  const classes = useStyles();\n  const isMobile = useIsMobile();\n  const [validDate, setValidDate] = useState(\"\");\n\n  const dateToday = () => {\n    const date = format(new Date(), VALID_DATE_FORMAT);\n    setValidDate(date);\n  };\n\n  useEffect(() => {\n    dateToday();\n  }, []);\n\n  return (\n    <>\n      <Grid container spacing={2} direction=\"row\" justify=\"space-around\">\n        <Grid item md={1} xs={6}>\n          <Box>\n            <img\n              className={classes.media}\n              src={weather.current.condition.icon}\n              alt=\"weather\"\n            ></img>\n          </Box>\n        </Grid>\n        <Grid item md={2} xs={6}>\n          <Typography className={classes.degrees}>\n            {degrees\n              ? weather.current.temp_c + SYMBOLS.DEGREES\n              : weather.current.temp_f + SYMBOLS.FAHRENHEIT}\n          </Typography>\n          <Typography className={classes.condition}>\n            {weather.current.condition.text}\n          </Typography>\n        </Grid>\n        <Grid item md={6} xs={9}>\n          {forecast &&\n            isForecast === true &&\n            dailyForecast.forecastday.map((forecastday) => {\n              return (\n                <>\n                  {validDate === forecastday.date ? (\n                    <Card className={classes.root} raised>\n                      <CardContent>\n                        <Box\n                          mb={2}\n                          ml={isMobile ? 0 : 4}\n                          mr={isMobile ? 0 : -4}\n                        >\n                          <Grid container spacing={2} justify=\"space-between\">\n                            <Grid item xs={4}>\n                              <Typography className={classes.subTitle}>\n                                {degrees\n                                  ? forecastday.day.mintemp_c + SYMBOLS.DEGREES\n                                  : forecastday.day.mintemp_f +\n                                    SYMBOLS.FAHRENHEIT}{\" \"}\n                              </Typography>\n                              <Typography className={classes.subText}>\n                                Low\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={4}>\n                              <Typography className={classes.subTitle}>\n                                {degrees\n                                  ? forecastday.day.maxwind_mph + \" mph\"\n                                  : forecastday.day.maxwind_kph + \" kph\"}\n                              </Typography>\n                              <Typography className={classes.subText}>\n                                Wind\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={4}>\n                              <Typography className={classes.subTitle}>\n                                {forecastday.astro.sunrise}\n                              </Typography>\n                              <Typography className={classes.subText}>\n                                Sunrise\n                              </Typography>\n                            </Grid>\n                          </Grid>\n                        </Box>\n\n                        <Box ml={isMobile ? 0 : 4} mr={isMobile ? 0 : -4}>\n                          <Grid container spacing={2} justify=\"space-between\">\n                            <Grid item xs={4}>\n                              <Typography className={classes.subTitle}>\n                                {degrees\n                                  ? forecastday.day.maxtemp_c + SYMBOLS.DEGREES\n                                  : forecastday.day.maxtemp_f +\n                                    SYMBOLS.FAHRENHEIT}\n                              </Typography>\n                              <Typography className={classes.subText}>\n                                High\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={4}>\n                              <Typography className={classes.subTitle}>\n                                {degrees\n                                  ? forecast.current.feelslike_c +\n                                    SYMBOLS.DEGREES\n                                  : forecast.current.feelslike_f +\n                                    SYMBOLS.FAHRENHEIT}\n                              </Typography>\n                              <Typography className={classes.subText}>\n                                Feels Like\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={4}>\n                              <Typography className={classes.subTitle}>\n                                {forecastday.astro.sunset}\n                              </Typography>\n                              <Typography className={classes.subText}>\n                                Sunset\n                              </Typography>\n                            </Grid>\n                          </Grid>\n                        </Box>\n                      </CardContent>\n                    </Card>\n                  ) : null}\n                </>\n              );\n            })}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Today;\n"]},"metadata":{},"sourceType":"module"}