{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulcunningham/react-projects/weather-app/src/Pages/SearchDetails/SearchDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { SYMBOLS } from \"../../Constants/Constants\";\nimport useStyles from \"../styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useParams } from \"react-router-dom\";\n\nconst SearchDetails = () => {\n  _s();\n\n  const classes = useStyles();\n  const [weather, setWeather] = useState(null);\n  const {\n    location: urlGroupId\n  } = useParams();\n  const [location, setLocation] = useState(\"\");\n  const [isToday, setIsToday] = useState(true);\n  useEffect(() => {\n    if (urlGroupId) {\n      setLocation(urlGroupId);\n    }\n  }, [urlGroupId]);\n  useEffect(() => {\n    if (location !== \"\") {\n      getToday();\n    }\n  }, [location]);\n\n  const getToday = () => {\n    axios.get(`${process.env.REACT_APP_WEATHER_API}=${location}`).then(data => {\n      setWeather(data.data);\n      console.log(data.data);\n      setIsToday(true);\n    }).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: \"2\",\n    children: weather && isToday === true && /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h4\",\n            className: classes.text,\n            children: weather.location.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            className: classes.text,\n            children: weather.location.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.text,\n            children: [weather.current.temp_c, \" \", SYMBOLS.DEGREES, \" \", \"\", weather.current.temp_f, \" \", SYMBOLS.FAHRENHEIT]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.text,\n            children: weather.current.condition.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n          className: classes.media,\n          image: weather.current.condition.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchDetails, \"gv2Bx5Q2FFlBnzHX6OCEvwcsdF0=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = SearchDetails;\nexport default SearchDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchDetails\");","map":{"version":3,"sources":["/Users/paulcunningham/react-projects/weather-app/src/Pages/SearchDetails/SearchDetails.js"],"names":["React","useEffect","useState","axios","Card","CardContent","CardMedia","Typography","SYMBOLS","useStyles","Grid","useParams","SearchDetails","classes","weather","setWeather","location","urlGroupId","setLocation","isToday","setIsToday","getToday","get","process","env","REACT_APP_WEATHER_API","then","data","console","log","catch","error","root","text","name","country","current","temp_c","DEGREES","temp_f","FAHRENHEIT","condition","media","icon"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { SYMBOLS } from \"../../Constants/Constants\";\nimport useStyles from \"../styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useParams } from \"react-router-dom\";\n\nconst SearchDetails = () => {\n  const classes = useStyles();\n  const [weather, setWeather] = useState(null);\n  const { location: urlGroupId } = useParams();\n  const [location, setLocation] = useState(\"\");\n  const [isToday, setIsToday] = useState(true);\n\n  useEffect(() => {\n    if (urlGroupId) {\n      setLocation(urlGroupId);\n    }\n  }, [urlGroupId]);\n\n  useEffect(() => {\n    if (location !== \"\") {\n      getToday();\n    }\n  }, [location]);\n\n  const getToday = () => {\n    axios\n      .get(`${process.env.REACT_APP_WEATHER_API}=${location}`)\n      .then((data) => {\n        setWeather(data.data);\n        console.log(data.data);\n        setIsToday(true);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <Grid container spacing=\"2\">\n      {weather && isToday === true && (\n        <Grid item xs={12}>\n          <Typography variant=\"h2\">Today</Typography>\n          <Card className={classes.root}>\n            <CardContent>\n              <Typography gutterBottom variant=\"h4\" className={classes.text}>\n                {weather.location.name}\n              </Typography>\n              <Typography variant=\"h5\" className={classes.text}>\n                {weather.location.country}\n              </Typography>\n              <Typography className={classes.text}>\n                {weather.current.temp_c} {SYMBOLS.DEGREES} {\"\"}\n                {weather.current.temp_f} {SYMBOLS.FAHRENHEIT}\n              </Typography>\n              <Typography className={classes.text}>\n                {weather.current.condition.text}\n              </Typography>\n            </CardContent>\n            <CardMedia\n              className={classes.media}\n              image={weather.current.condition.icon}\n            />\n          </Card>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\nexport default SearchDetails;\n"]},"metadata":{},"sourceType":"module"}