{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulcunningham/react-projects/weather-app/src/Pages/SearchDetails/SearchDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { SYMBOLS, LONG_DATE_FORMAT, LONG_DATE_TIME_FORMAT, SHORT_DATE_FORMAT, VALID_DATE_FORMAT } from \"../../Constants/Constants\";\nimport useStyles from \"./styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useParams } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport format from \"date-fns/format\";\nimport HourlyWeather from \"../../Components/HourlyWeather/HourlyWeather\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\"; // import useIsMobile from \"../../Components/useIsMobile/useIsMobile\";\n\nconst SearchDetails = () => {\n  _s();\n\n  // const isMobile = useIsMobile();\n  const classes = useStyles();\n  const [weather, setWeather] = useState(null);\n  const {\n    location: urlGroupId\n  } = useParams();\n  const [location, setLocation] = useState(\"\");\n  const [isToday, setIsToday] = useState(true);\n  const [days] = useState(3);\n  const [isForecast, setIsForecast] = useState(false);\n  const [dailyForecast, setDailyForecast] = useState({});\n  const [forecast, setForecast] = useState(null);\n  const [activeTab, setActiveTab] = useState(0);\n  const [validDate, setValidDate] = useState(\"\");\n  const [isHistory, setIsHistory] = useState(false);\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const [history, setHistory] = useState(null);\n  const [historyForecast, setHistoryForecast] = useState({});\n  const [date, setDate] = useState(format(new Date(selectedDate), VALID_DATE_FORMAT));\n  useEffect(() => {\n    if (urlGroupId) {\n      setLocation(urlGroupId);\n    }\n  }, [urlGroupId]);\n\n  const dateToday = () => {\n    const date = format(new Date(), VALID_DATE_FORMAT);\n    setValidDate(date);\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  const getHistory = useCallback(async () => {\n    const newDate = new Date(selectedDate).toISOString().split(\"T\")[0];\n    setDate(newDate);\n    axios.get(`${process.env.REACT_APP_HISTORY_API}=${location}&dt=${date}`).then(data => {\n      setHistory(data.data.forecast);\n      setHistoryForecast(data.data.forecast);\n      console.log(data.data.forecast);\n      setIsHistory(true);\n    }).catch(error => console.log(error));\n  }, [location, selectedDate, date]);\n  const getToday = useCallback(async () => {\n    axios.get(`${process.env.REACT_APP_WEATHER_API}=${location}`).then(data => {\n      setWeather(data.data);\n      setIsToday(true);\n    }).catch(error => console.log(error));\n  }, [location]);\n  const getForecast = useCallback(async () => {\n    axios.get(`${process.env.REACT_APP_FORECAST_API}=${location}&days=${days}`).then(data => {\n      setForecast(data.data);\n      setDailyForecast(data.data.forecast);\n      setIsForecast(true);\n    }).catch(error => console.log(error));\n  }, [days, location]);\n  useEffect(() => {\n    if (location !== \"\") {\n      getToday();\n      getForecast();\n      dateToday();\n      getHistory();\n    }\n  }, [location, getForecast, getHistory, getToday]); // const getMinDate = () => {\n  //   const date = new Date();\n  //   date.setDate(date.getDate() - 8);\n  //   console.log(date);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ml: 4,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: weather && isToday === true && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h2\",\n              className: classes.title,\n              children: [\"Today in \", weather.location.name, \", \", \"\", \" \", weather.location.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.subTitle,\n              children: [\"Last Updated: \", \"\", format(new Date(weather.current.last_updated), LONG_DATE_TIME_FORMAT)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            mb: 2,\n            mt: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.time,\n              children: format(new Date(weather.location.localtime), LONG_DATE_FORMAT)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          direction: \"row\",\n          justify: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 1,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: classes.media,\n                src: weather.current.condition.icon,\n                alt: \"weather\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 2,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.degrees,\n              children: [weather.current.temp_c, \" \", SYMBOLS.DEGREES]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.degrees,\n              children: weather.current.condition.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 6,\n            xs: 12,\n            children: forecast && isForecast === true && dailyForecast.forecastday.map((forecastday, index) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: validDate === forecastday.date ? /*#__PURE__*/_jsxDEV(Card, {\n                  className: weather.current.is_day === 1 ? classes.night : classes.root,\n                  children: /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      mb: 2,\n                      ml: 4,\n                      mr: -4,\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        spacing: 2,\n                        justify: \"space-between\",\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subTitle,\n                            children: [forecastday.day.mintemp_c, \" \", SYMBOLS.DEGREES]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 183,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subText,\n                            children: \"Low\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 187,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 182,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subTitle,\n                            children: [forecastday.day.maxwind_mph, \" mph\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 192,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subText,\n                            children: \"Wind\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 195,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 191,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subTitle,\n                            children: forecastday.astro.sunrise\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 200,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subText,\n                            children: \"Sunrise\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 203,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 199,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 177,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      ml: 4,\n                      mr: -4,\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        spacing: 2,\n                        justify: \"space-between\",\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subTitle,\n                            children: [forecastday.day.maxtemp_c, \" \", SYMBOLS.DEGREES]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 217,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subText,\n                            children: \"High\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 221,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 216,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subTitle,\n                            children: forecastday.day.daily_will_it_rain === 1 ? \"Yes\" : \"No\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 226,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subText,\n                            children: \"Rain\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 231,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 225,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 4,\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subTitle,\n                            children: forecastday.astro.sunset\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 236,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                            className: classes.subText,\n                            children: \"Sunset\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 239,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 235,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 211,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 27\n                }, this) : null\n              }, void 0, false);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          direction: \"row\",\n          justify: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h2\",\n              className: classes.title,\n              children: \"Forecast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), isForecast === true ? /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Tabs, {\n                value: activeTab,\n                indicatorColor: \"primary\",\n                textColor: \"primary\",\n                onChange: handleTabChange,\n                \"aria-label\": \"Weather Tab\",\n                variant: \"scrollable\",\n                children: dailyForecast.forecastday.map((forecastday, index) => {\n                  return /*#__PURE__*/_jsxDEV(Tab, {\n                    label: format(new Date(forecastday.date), SHORT_DATE_FORMAT)\n                  }, `${forecastday.date}_tab_${index}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"No forecast Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: forecast && isForecast === true && dailyForecast.forecastday.map((forecastday, index) => {\n                return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: activeTab === index && /*#__PURE__*/_jsxDEV(HourlyWeather, {\n                    tabNumber: index,\n                    forecastday: forecastday\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 29\n                  }, this)\n                }, `display_weather_details_${forecastday.date}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            direction: \"row\",\n            justify: \"space-between\",\n            children: history && /*#__PURE__*/_jsxDEV(Grid, {\n              children: isHistory === true ? historyForecast.forecastday.map((histroyDay, index) => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h2\",\n                    className: classes.title,\n                    children: \"View History\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      children: [/*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                        label: \"Select Date\",\n                        clearable: true,\n                        maxDate: new Date(),\n                        format: \"yyyy/MM/dd\",\n                        value: selectedDate,\n                        onChange: date => handleDateChange(date)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 327,\n                        columnNumber: 33\n                      }, this), format(new Date(histroyDay.date), SHORT_DATE_FORMAT)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 326,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Card, {\n                      className: weather.current.is_day === 1 ? classes.night : classes.root,\n                      children: /*#__PURE__*/_jsxDEV(CardContent, {\n                        children: [/*#__PURE__*/_jsxDEV(Box, {\n                          mb: 2,\n                          ml: 4,\n                          mr: -4,\n                          children: /*#__PURE__*/_jsxDEV(Grid, {\n                            container: true,\n                            spacing: 2,\n                            justify: \"space-between\",\n                            children: [/*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 4,\n                              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                className: classes.subTitle,\n                                children: [histroyDay.day.mintemp_c, \" \", SYMBOLS.DEGREES]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 356,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                                className: classes.subText,\n                                children: \"Low\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 362,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 355,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 4,\n                              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                className: classes.subTitle,\n                                children: [histroyDay.day.maxwind_mph, \" mph\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 367,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                                className: classes.subText,\n                                children: \"Wind\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 372,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 366,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 4,\n                              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                className: classes.subTitle,\n                                children: histroyDay.astro.sunrise\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 377,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                                className: classes.subText,\n                                children: \"Sunrise\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 382,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 376,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 350,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 349,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(Box, {\n                          ml: 4,\n                          mr: -4,\n                          children: /*#__PURE__*/_jsxDEV(Grid, {\n                            container: true,\n                            spacing: 2,\n                            justify: \"space-between\",\n                            children: [/*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 4,\n                              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                className: classes.subTitle,\n                                children: [histroyDay.day.maxtemp_c, \" \", SYMBOLS.DEGREES]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 396,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                                className: classes.subText,\n                                children: \"High\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 402,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 395,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 4,\n                              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                className: classes.subTitle,\n                                children: histroyDay.day.daily_will_it_rain === 1 ? \"Yes\" : \"No\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 407,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                                className: classes.subText,\n                                children: \"Rain\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 415,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 406,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 4,\n                              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                className: classes.subTitle,\n                                children: histroyDay.astro.sunset\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 420,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                                className: classes.subText,\n                                children: \"Sunset\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 425,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 419,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 390,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 389,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 348,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true);\n              }) : /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"No forecast found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchDetails, \"I3g8ZnkGCR94mIila/zNwngTJvM=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = SearchDetails;\nexport default SearchDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchDetails\");","map":{"version":3,"sources":["/Users/paulcunningham/react-projects/weather-app/src/Pages/SearchDetails/SearchDetails.js"],"names":["React","useEffect","useState","useCallback","axios","Card","CardContent","Typography","SYMBOLS","LONG_DATE_FORMAT","LONG_DATE_TIME_FORMAT","SHORT_DATE_FORMAT","VALID_DATE_FORMAT","useStyles","Grid","useParams","Box","format","HourlyWeather","Tab","Tabs","KeyboardDatePicker","SearchDetails","classes","weather","setWeather","location","urlGroupId","setLocation","isToday","setIsToday","days","isForecast","setIsForecast","dailyForecast","setDailyForecast","forecast","setForecast","activeTab","setActiveTab","validDate","setValidDate","isHistory","setIsHistory","selectedDate","handleDateChange","Date","history","setHistory","historyForecast","setHistoryForecast","date","setDate","dateToday","handleTabChange","event","newValue","getHistory","newDate","toISOString","split","get","process","env","REACT_APP_HISTORY_API","then","data","console","log","catch","error","getToday","REACT_APP_WEATHER_API","getForecast","REACT_APP_FORECAST_API","title","name","country","subTitle","current","last_updated","time","localtime","media","condition","icon","degrees","temp_c","DEGREES","text","forecastday","map","index","is_day","night","root","day","mintemp_c","subText","maxwind_mph","astro","sunrise","maxtemp_c","daily_will_it_rain","sunset","histroyDay"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  SYMBOLS,\n  LONG_DATE_FORMAT,\n  LONG_DATE_TIME_FORMAT,\n  SHORT_DATE_FORMAT,\n  VALID_DATE_FORMAT,\n} from \"../../Constants/Constants\";\nimport useStyles from \"./styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useParams } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport format from \"date-fns/format\";\nimport HourlyWeather from \"../../Components/HourlyWeather/HourlyWeather\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\n// import useIsMobile from \"../../Components/useIsMobile/useIsMobile\";\n\nconst SearchDetails = () => {\n  // const isMobile = useIsMobile();\n  const classes = useStyles();\n  const [weather, setWeather] = useState(null);\n  const { location: urlGroupId } = useParams();\n  const [location, setLocation] = useState(\"\");\n  const [isToday, setIsToday] = useState(true);\n  const [days] = useState(3);\n  const [isForecast, setIsForecast] = useState(false);\n  const [dailyForecast, setDailyForecast] = useState({});\n  const [forecast, setForecast] = useState(null);\n  const [activeTab, setActiveTab] = useState(0);\n  const [validDate, setValidDate] = useState(\"\");\n  const [isHistory, setIsHistory] = useState(false);\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const [history, setHistory] = useState(null);\n  const [historyForecast, setHistoryForecast] = useState({});\n  const [date, setDate] = useState(\n    format(new Date(selectedDate), VALID_DATE_FORMAT)\n  );\n\n  useEffect(() => {\n    if (urlGroupId) {\n      setLocation(urlGroupId);\n    }\n  }, [urlGroupId]);\n\n  const dateToday = () => {\n    const date = format(new Date(), VALID_DATE_FORMAT);\n    setValidDate(date);\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  const getHistory = useCallback(async () => {\n    const newDate = new Date(selectedDate).toISOString().split(\"T\")[0];\n    setDate(newDate);\n    axios\n      .get(`${process.env.REACT_APP_HISTORY_API}=${location}&dt=${date}`)\n      .then((data) => {\n        setHistory(data.data.forecast);\n        setHistoryForecast(data.data.forecast);\n        console.log(data.data.forecast);\n        setIsHistory(true);\n      })\n      .catch((error) => console.log(error));\n  }, [location, selectedDate, date]);\n\n  const getToday = useCallback(async () => {\n    axios\n      .get(`${process.env.REACT_APP_WEATHER_API}=${location}`)\n      .then((data) => {\n        setWeather(data.data);\n        setIsToday(true);\n      })\n      .catch((error) => console.log(error));\n  }, [location]);\n\n  const getForecast = useCallback(async () => {\n    axios\n      .get(`${process.env.REACT_APP_FORECAST_API}=${location}&days=${days}`)\n      .then((data) => {\n        setForecast(data.data);\n        setDailyForecast(data.data.forecast);\n\n        setIsForecast(true);\n      })\n\n      .catch((error) => console.log(error));\n  }, [days, location]);\n\n  useEffect(() => {\n    if (location !== \"\") {\n      getToday();\n      getForecast();\n      dateToday();\n      getHistory();\n    }\n  }, [location, getForecast, getHistory, getToday]);\n\n  // const getMinDate = () => {\n  //   const date = new Date();\n  //   date.setDate(date.getDate() - 8);\n  //   console.log(date);\n  // };\n\n  return (\n    <Box ml={4}>\n      <Grid container spacing={2}>\n        {weather && isToday === true && (\n          <>\n            <Grid item xs={12}>\n              <Box mt={2}>\n                <Typography variant=\"h2\" className={classes.title}>\n                  Today in {weather.location.name}, {\"\"}{\" \"}\n                  {weather.location.country}\n                </Typography>\n                <Typography variant=\"h5\" className={classes.subTitle}>\n                  Last Updated: {\"\"}\n                  {format(\n                    new Date(weather.current.last_updated),\n                    LONG_DATE_TIME_FORMAT\n                  )}\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item xs={12}>\n              <Box mb={2} mt={2}>\n                <Typography variant=\"h5\" className={classes.time}>\n                  {format(\n                    new Date(weather.location.localtime),\n                    LONG_DATE_FORMAT\n                  )}\n                </Typography>\n              </Box>\n            </Grid>\n\n            <Grid container spacing={2} direction=\"row\" justify=\"space-between\">\n              <Grid item md={1} xs={12}>\n                <Box>\n                  <img\n                    className={classes.media}\n                    src={weather.current.condition.icon}\n                    alt=\"weather\"\n                  ></img>\n                </Box>\n              </Grid>\n              <Grid item md={2} xs={12}>\n                <Typography className={classes.degrees}>\n                  {weather.current.temp_c} {SYMBOLS.DEGREES}\n                </Typography>\n                <Typography className={classes.degrees}>\n                  {weather.current.condition.text}\n                </Typography>\n              </Grid>\n              <Grid item md={6} xs={12}>\n                {forecast &&\n                  isForecast === true &&\n                  dailyForecast.forecastday.map((forecastday, index) => {\n                    return (\n                      <>\n                        {validDate === forecastday.date ? (\n                          <Card\n                            className={\n                              weather.current.is_day === 1\n                                ? classes.night\n                                : classes.root\n                            }\n                          >\n                            <CardContent>\n                              <Box mb={2} ml={4} mr={-4}>\n                                <Grid\n                                  container\n                                  spacing={2}\n                                  justify=\"space-between\"\n                                >\n                                  <Grid item xs={4}>\n                                    <Typography className={classes.subTitle}>\n                                      {forecastday.day.mintemp_c}{\" \"}\n                                      {SYMBOLS.DEGREES}\n                                    </Typography>\n                                    <Typography className={classes.subText}>\n                                      Low\n                                    </Typography>\n                                  </Grid>\n                                  <Grid item xs={4}>\n                                    <Typography className={classes.subTitle}>\n                                      {forecastday.day.maxwind_mph} mph\n                                    </Typography>\n                                    <Typography className={classes.subText}>\n                                      Wind\n                                    </Typography>\n                                  </Grid>\n                                  <Grid item xs={4}>\n                                    <Typography className={classes.subTitle}>\n                                      {forecastday.astro.sunrise}\n                                    </Typography>\n                                    <Typography className={classes.subText}>\n                                      Sunrise\n                                    </Typography>\n                                  </Grid>\n                                </Grid>\n                              </Box>\n\n                              <Box ml={4} mr={-4}>\n                                <Grid\n                                  container\n                                  spacing={2}\n                                  justify=\"space-between\"\n                                >\n                                  <Grid item xs={4}>\n                                    <Typography className={classes.subTitle}>\n                                      {forecastday.day.maxtemp_c}{\" \"}\n                                      {SYMBOLS.DEGREES}\n                                    </Typography>\n                                    <Typography className={classes.subText}>\n                                      High\n                                    </Typography>\n                                  </Grid>\n                                  <Grid item xs={4}>\n                                    <Typography className={classes.subTitle}>\n                                      {forecastday.day.daily_will_it_rain === 1\n                                        ? \"Yes\"\n                                        : \"No\"}\n                                    </Typography>\n                                    <Typography className={classes.subText}>\n                                      Rain\n                                    </Typography>\n                                  </Grid>\n                                  <Grid item xs={4}>\n                                    <Typography className={classes.subTitle}>\n                                      {forecastday.astro.sunset}\n                                    </Typography>\n                                    <Typography className={classes.subText}>\n                                      Sunset\n                                    </Typography>\n                                  </Grid>\n                                </Grid>\n                              </Box>\n                            </CardContent>\n                          </Card>\n                        ) : null}\n                      </>\n                    );\n                  })}\n              </Grid>\n            </Grid>\n            <Grid container spacing={2} direction=\"row\" justify=\"space-between\">\n              <Grid item xs={12}>\n                <Typography variant=\"h2\" className={classes.title}>\n                  Forecast\n                </Typography>\n              </Grid>\n\n              {/* FORECAST  */}\n              <Grid>\n                <Typography variant=\"h2\"></Typography>\n                {isForecast === true ? (\n                  <Grid item xs={12}>\n                    <Tabs\n                      value={activeTab}\n                      indicatorColor=\"primary\"\n                      textColor=\"primary\"\n                      onChange={handleTabChange}\n                      aria-label=\"Weather Tab\"\n                      variant=\"scrollable\"\n                    >\n                      {dailyForecast.forecastday.map((forecastday, index) => {\n                        return (\n                          <Tab\n                            key={`${forecastday.date}_tab_${index}`}\n                            label={format(\n                              new Date(forecastday.date),\n                              SHORT_DATE_FORMAT\n                            )}\n                          />\n                        );\n                      })}\n                    </Tabs>\n                  </Grid>\n                ) : (\n                  <Typography>No forecast Available</Typography>\n                )}\n              </Grid>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  {forecast &&\n                    isForecast === true &&\n                    dailyForecast.forecastday.map((forecastday, index) => {\n                      return (\n                        <React.Fragment\n                          key={`display_weather_details_${forecastday.date}`}\n                        >\n                          {activeTab === index && (\n                            <HourlyWeather\n                              tabNumber={index}\n                              forecastday={forecastday}\n                            />\n                          )}\n                        </React.Fragment>\n                      );\n                    })}\n                </Grid>\n              </Grid>\n              <Grid\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"space-between\"\n              >\n                {history && (\n                  <Grid>\n                    {isHistory === true ? (\n                      historyForecast.forecastday.map((histroyDay, index) => {\n                        return (\n                          <>\n                            <Typography variant=\"h2\" className={classes.title}>\n                              View History\n                            </Typography>\n                            <Grid item xs={12}>\n                              <Grid item xs={12}>\n                                <KeyboardDatePicker\n                                  label=\"Select Date\"\n                                  clearable\n                                  maxDate={new Date()}\n                                  format=\"yyyy/MM/dd\"\n                                  value={selectedDate}\n                                  onChange={(date) => handleDateChange(date)}\n                                />\n                                {format(\n                                  new Date(histroyDay.date),\n                                  SHORT_DATE_FORMAT\n                                )}\n                              </Grid>\n\n                              <Card\n                                className={\n                                  weather.current.is_day === 1\n                                    ? classes.night\n                                    : classes.root\n                                }\n                              >\n                                <CardContent>\n                                  <Box mb={2} ml={4} mr={-4}>\n                                    <Grid\n                                      container\n                                      spacing={2}\n                                      justify=\"space-between\"\n                                    >\n                                      <Grid item xs={4}>\n                                        <Typography\n                                          className={classes.subTitle}\n                                        >\n                                          {histroyDay.day.mintemp_c}{\" \"}\n                                          {SYMBOLS.DEGREES}\n                                        </Typography>\n                                        <Typography className={classes.subText}>\n                                          Low\n                                        </Typography>\n                                      </Grid>\n                                      <Grid item xs={4}>\n                                        <Typography\n                                          className={classes.subTitle}\n                                        >\n                                          {histroyDay.day.maxwind_mph} mph\n                                        </Typography>\n                                        <Typography className={classes.subText}>\n                                          Wind\n                                        </Typography>\n                                      </Grid>\n                                      <Grid item xs={4}>\n                                        <Typography\n                                          className={classes.subTitle}\n                                        >\n                                          {histroyDay.astro.sunrise}\n                                        </Typography>\n                                        <Typography className={classes.subText}>\n                                          Sunrise\n                                        </Typography>\n                                      </Grid>\n                                    </Grid>\n                                  </Box>\n\n                                  <Box ml={4} mr={-4}>\n                                    <Grid\n                                      container\n                                      spacing={2}\n                                      justify=\"space-between\"\n                                    >\n                                      <Grid item xs={4}>\n                                        <Typography\n                                          className={classes.subTitle}\n                                        >\n                                          {histroyDay.day.maxtemp_c}{\" \"}\n                                          {SYMBOLS.DEGREES}\n                                        </Typography>\n                                        <Typography className={classes.subText}>\n                                          High\n                                        </Typography>\n                                      </Grid>\n                                      <Grid item xs={4}>\n                                        <Typography\n                                          className={classes.subTitle}\n                                        >\n                                          {histroyDay.day.daily_will_it_rain ===\n                                          1\n                                            ? \"Yes\"\n                                            : \"No\"}\n                                        </Typography>\n                                        <Typography className={classes.subText}>\n                                          Rain\n                                        </Typography>\n                                      </Grid>\n                                      <Grid item xs={4}>\n                                        <Typography\n                                          className={classes.subTitle}\n                                        >\n                                          {histroyDay.astro.sunset}\n                                        </Typography>\n                                        <Typography className={classes.subText}>\n                                          Sunset\n                                        </Typography>\n                                      </Grid>\n                                    </Grid>\n                                  </Box>\n                                </CardContent>\n                              </Card>\n                            </Grid>\n                          </>\n                        );\n                      })\n                    ) : (\n                      <Typography>No forecast found</Typography>\n                    )}\n                  </Grid>\n                )}\n              </Grid>\n            </Grid>\n          </>\n        )}\n      </Grid>\n    </Box>\n  );\n};\nexport default SearchDetails;\n"]},"metadata":{},"sourceType":"module"}