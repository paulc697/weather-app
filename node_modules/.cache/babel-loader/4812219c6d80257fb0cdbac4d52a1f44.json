{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulcunningham/react-projects/weather-app/src/Pages/SearchDetails/SearchDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { SYMBOLS, LONG_DATE_FORMAT, LONG_DATE_TIME_FORMAT, SHORT_DATE_FORMAT, VALID_DATE_FORMAT } from \"../../Constants/Constants\";\nimport useStyles from \"./styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useParams } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport format from \"date-fns/format\";\nimport HourlyWeather from \"../../Components/HourlyWeather/HourlyWeather\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport useIsMobile from \"../../Components/useIsMobile/useIsMobile\";\nimport History from \"../../Components/History/History\";\nimport Button from \"@material-ui/core/Button\";\nimport Search from \"../../Components/Search/Search\";\n\nconst SearchDetails = () => {\n  _s();\n\n  const isMobile = useIsMobile();\n  const classes = useStyles();\n  const [weather, setWeather] = useState(null);\n  const {\n    location: urlGroupId\n  } = useParams();\n  const [location, setLocation] = useState(\"\");\n  const [isToday, setIsToday] = useState(true);\n  const [days] = useState(3);\n  const [isForecast, setIsForecast] = useState(false);\n  const [dailyForecast, setDailyForecast] = useState({});\n  const [forecast, setForecast] = useState(null);\n  const [activeTab, setActiveTab] = useState(0);\n  const [validDate, setValidDate] = useState(\"\");\n  const [isHistory, setIsHistory] = useState(false);\n  const [history, setHistory] = useState(null);\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const [historyForecast, setHistoryForecast] = useState({});\n  const [date, setDate] = useState(format(new Date(selectedDate), VALID_DATE_FORMAT));\n  const [degrees, setDegrees] = useState(true);\n  const [farenheight, setFarenheight] = useState(false);\n  useEffect(() => {\n    if (urlGroupId) {\n      setLocation(urlGroupId);\n    }\n  }, [urlGroupId]);\n\n  const dateToday = () => {\n    const date = format(new Date(), VALID_DATE_FORMAT);\n    setValidDate(date);\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  const getHistory = useCallback(async () => {\n    const newDate = new Date(selectedDate).toISOString().split(\"T\")[0];\n    setDate(newDate);\n    axios.get(`${process.env.REACT_APP_HISTORY_API}=${location}&dt=${date}`).then(data => {\n      setHistoryForecast(data.data.forecast);\n      setIsHistory(true);\n      setHistory(data.data);\n    }).catch(error => console.log(error));\n  }, [location, selectedDate, date]);\n  const getToday = useCallback(async () => {\n    axios.get(`${process.env.REACT_APP_WEATHER_API}=${location}`).then(data => {\n      setWeather(data.data);\n      setIsToday(true);\n    }).catch(error => console.log(error));\n  }, [location]);\n  const getForecast = useCallback(async () => {\n    axios.get(`${process.env.REACT_APP_FORECAST_API}=${location}&days=${days}`).then(data => {\n      setForecast(data.data);\n      setDailyForecast(data.data.forecast);\n      console.log(data.data.forecast);\n      setIsForecast(true);\n    }).catch(error => console.log(error));\n  }, [days, location]);\n  useEffect(() => {\n    if (location !== \"\") {\n      getToday();\n      getForecast();\n      dateToday();\n      getHistory();\n    }\n  }, [location, getForecast, getHistory, getToday]);\n\n  const setDegree = () => {\n    setDegrees(true);\n    setFarenheight(false);\n  };\n\n  const setFaren = () => {\n    setDegrees(false);\n    setFarenheight(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    justify: \"space-around\",\n    children: weather === null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        children: \"No results found \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: weather && isToday ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h2\",\n                className: classes.title,\n                children: [\"Today in \", weather.location.name, \", \", \"\", \" \", weather.location.country]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.time,\n              children: [\"Last Updated: \", \"\", format(new Date(weather.current.last_updated), LONG_DATE_TIME_FORMAT)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 9,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                mb: 2,\n                mt: 2,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  className: classes.subTitle,\n                  children: format(new Date(weather.location.localtime), LONG_DATE_FORMAT)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"text\",\n                size: \"small\",\n                onClick: setDegree,\n                className: degrees ? classes.buttonActive : classes.buttonInactive,\n                children: SYMBOLS.DEGREES\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"text\",\n                size: \"small\",\n                onClick: setFaren,\n                className: farenheight ? classes.buttonActive : classes.buttonInactive,\n                children: SYMBOLS.FAHRENHEIT\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            direction: \"row\",\n            justify: \"space-around\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 1,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: classes.media,\n                  src: weather.current.condition.icon,\n                  alt: \"weather\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 2,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.degrees,\n                children: degrees ? weather.current.temp_c + SYMBOLS.DEGREES : weather.current.temp_f + SYMBOLS.FAHRENHEIT\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.condition,\n                children: weather.current.condition.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 6,\n              xs: 12,\n              children: forecast && isForecast === true && dailyForecast.forecastday.map(forecastday => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: validDate === forecastday.date ? /*#__PURE__*/_jsxDEV(Card, {\n                    className: classes.root,\n                    raised: true,\n                    children: /*#__PURE__*/_jsxDEV(CardContent, {\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        mb: 2,\n                        ml: 4,\n                        mr: -4,\n                        children: /*#__PURE__*/_jsxDEV(Grid, {\n                          container: true,\n                          spacing: 2,\n                          justify: \"space-between\",\n                          children: [/*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 4,\n                            children: [/*#__PURE__*/_jsxDEV(Typography, {\n                              className: classes.subTitle,\n                              children: [degrees ? forecastday.day.mintemp_c + SYMBOLS.DEGREES : forecastday.day.mintemp_f + SYMBOLS.FAHRENHEIT, \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 217,\n                              columnNumber: 45\n                            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                              className: classes.subText,\n                              children: \"Low\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 224,\n                              columnNumber: 45\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 216,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 4,\n                            children: [/*#__PURE__*/_jsxDEV(Typography, {\n                              className: classes.subTitle,\n                              children: degrees ? forecastday.day.maxwind_mph + \" mph\" : forecastday.day.maxwind_kph + \" kph\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 229,\n                              columnNumber: 45\n                            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                              className: classes.subText,\n                              children: \"Wind\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 234,\n                              columnNumber: 45\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 228,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 4,\n                            children: [/*#__PURE__*/_jsxDEV(Typography, {\n                              className: classes.subTitle,\n                              children: forecastday.astro.sunrise\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 239,\n                              columnNumber: 45\n                            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                              className: classes.subText,\n                              children: \"Sunrise\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 242,\n                              columnNumber: 45\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 238,\n                            columnNumber: 43\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 211,\n                          columnNumber: 41\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 39\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        ml: 4,\n                        mr: -4,\n                        children: /*#__PURE__*/_jsxDEV(Grid, {\n                          container: true,\n                          spacing: 2,\n                          justify: \"space-between\",\n                          children: [/*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 4,\n                            children: [/*#__PURE__*/_jsxDEV(Typography, {\n                              className: classes.subTitle,\n                              children: degrees ? forecastday.day.maxtemp_c + SYMBOLS.DEGREES : forecastday.day.maxtemp_f + SYMBOLS.FAHRENHEIT\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 256,\n                              columnNumber: 45\n                            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                              className: classes.subText,\n                              children: \"High\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 263,\n                              columnNumber: 45\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 255,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 4,\n                            children: [/*#__PURE__*/_jsxDEV(Typography, {\n                              className: classes.subTitle,\n                              children: degrees ? forecast.current.feelslike_c + SYMBOLS.DEGREES : forecast.current.feelslike_f + SYMBOLS.FAHRENHEIT\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 268,\n                              columnNumber: 45\n                            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                              className: classes.subText,\n                              children: \"Feels Like\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 275,\n                              columnNumber: 45\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 267,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 4,\n                            children: [/*#__PURE__*/_jsxDEV(Typography, {\n                              className: classes.subTitle,\n                              children: forecastday.astro.sunset\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 280,\n                              columnNumber: 45\n                            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                              className: classes.subText,\n                              children: \"Sunset\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 283,\n                              columnNumber: 45\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 279,\n                            columnNumber: 43\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 250,\n                          columnNumber: 41\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 249,\n                        columnNumber: 39\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 35\n                  }, this) : null\n                }, void 0, false);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"No Results Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        direction: \"row\",\n        justify: \"space-between\",\n        children: [isForecast === true ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h2\",\n              className: classes.title,\n              children: \"Forecast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n            value: activeTab,\n            className: classes.tabs,\n            onChange: handleTabChange,\n            indicatorColor: \"primary\",\n            \"aria-label\": \"Weather Tab\",\n            variant: \"scrollable\",\n            children: dailyForecast.forecastday.map((forecastday, index) => {\n              return /*#__PURE__*/_jsxDEV(Tab, {\n                label: format(new Date(forecastday.date), SHORT_DATE_FORMAT)\n              }, `${forecastday.date}_tab_${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 15\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"No forecast Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: forecast && isForecast === true && dailyForecast.forecastday.map((forecastday, index) => {\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: activeTab === index && /*#__PURE__*/_jsxDEV(HourlyWeather, {\n                  tabNumber: index,\n                  degrees: degrees,\n                  forecastday: forecastday\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 21\n                }, this)\n              }, `display_weather_details_${forecastday.date}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 15\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: history && isHistory ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            mb: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h2\",\n              className: classes.title,\n              children: \"View History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n              label: \"Select Date\",\n              clearable: true,\n              minDate: new Date().getDate() - 7,\n              maxDate: new Date(),\n              format: \"yyyy/MM/dd\",\n              value: date,\n              onChange: date => handleDateChange(date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(History, {\n            degrees: degrees,\n            historyForecast: historyForecast,\n            isHistory: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"lol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchDetails, \"njFUD4CbsUUt8lg5y9Crf0S8zJQ=\", false, function () {\n  return [useIsMobile, useStyles, useParams];\n});\n\n_c = SearchDetails;\nexport default SearchDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchDetails\");","map":{"version":3,"sources":["/Users/paulcunningham/react-projects/weather-app/src/Pages/SearchDetails/SearchDetails.js"],"names":["React","useEffect","useState","useCallback","axios","Card","CardContent","Typography","SYMBOLS","LONG_DATE_FORMAT","LONG_DATE_TIME_FORMAT","SHORT_DATE_FORMAT","VALID_DATE_FORMAT","useStyles","Grid","useParams","Box","format","HourlyWeather","Tab","Tabs","KeyboardDatePicker","useIsMobile","History","Button","Search","SearchDetails","isMobile","classes","weather","setWeather","location","urlGroupId","setLocation","isToday","setIsToday","days","isForecast","setIsForecast","dailyForecast","setDailyForecast","forecast","setForecast","activeTab","setActiveTab","validDate","setValidDate","isHistory","setIsHistory","history","setHistory","selectedDate","handleDateChange","Date","historyForecast","setHistoryForecast","date","setDate","degrees","setDegrees","farenheight","setFarenheight","dateToday","handleTabChange","event","newValue","getHistory","newDate","toISOString","split","get","process","env","REACT_APP_HISTORY_API","then","data","catch","error","console","log","getToday","REACT_APP_WEATHER_API","getForecast","REACT_APP_FORECAST_API","setDegree","setFaren","title","name","country","time","current","last_updated","subTitle","localtime","buttonActive","buttonInactive","DEGREES","FAHRENHEIT","media","condition","icon","temp_c","temp_f","text","forecastday","map","root","day","mintemp_c","mintemp_f","subText","maxwind_mph","maxwind_kph","astro","sunrise","maxtemp_c","maxtemp_f","feelslike_c","feelslike_f","sunset","tabs","index","getDate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  SYMBOLS,\n  LONG_DATE_FORMAT,\n  LONG_DATE_TIME_FORMAT,\n  SHORT_DATE_FORMAT,\n  VALID_DATE_FORMAT,\n} from \"../../Constants/Constants\";\nimport useStyles from \"./styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useParams } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport format from \"date-fns/format\";\nimport HourlyWeather from \"../../Components/HourlyWeather/HourlyWeather\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport useIsMobile from \"../../Components/useIsMobile/useIsMobile\";\nimport History from \"../../Components/History/History\";\nimport Button from \"@material-ui/core/Button\";\nimport Search from \"../../Components/Search/Search\"\nconst SearchDetails = () => {\n  const isMobile = useIsMobile();\n  const classes = useStyles();\n  const [weather, setWeather] = useState(null);\n  const { location: urlGroupId } = useParams();\n  const [location, setLocation] = useState(\"\");\n  const [isToday, setIsToday] = useState(true);\n  const [days] = useState(3);\n  const [isForecast, setIsForecast] = useState(false);\n  const [dailyForecast, setDailyForecast] = useState({});\n  const [forecast, setForecast] = useState(null);\n  const [activeTab, setActiveTab] = useState(0);\n  const [validDate, setValidDate] = useState(\"\");\n  const [isHistory, setIsHistory] = useState(false);\n  const [history, setHistory] = useState(null);\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const [historyForecast, setHistoryForecast] = useState({});\n  const [date, setDate] = useState(\n    format(new Date(selectedDate), VALID_DATE_FORMAT)\n  );\n\n  const [degrees, setDegrees] = useState(true);\n  const [farenheight, setFarenheight] = useState(false);\n\n  useEffect(() => {\n    if (urlGroupId) {\n      setLocation(urlGroupId);\n    }\n  }, [urlGroupId]);\n\n  const dateToday = () => {\n    const date = format(new Date(), VALID_DATE_FORMAT);\n    setValidDate(date);\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  const getHistory = useCallback(async () => {\n    const newDate = new Date(selectedDate).toISOString().split(\"T\")[0];\n    setDate(newDate);\n    axios\n      .get(`${process.env.REACT_APP_HISTORY_API}=${location}&dt=${date}`)\n      .then((data) => {\n        setHistoryForecast(data.data.forecast);\n        setIsHistory(true);\n        setHistory(data.data)\n      })\n      .catch((error) => console.log(error));\n  }, [location, selectedDate, date]);\n\n  const getToday = useCallback(async () => {\n    axios\n      .get(`${process.env.REACT_APP_WEATHER_API}=${location}`)\n      .then((data) => {\n        setWeather(data.data);\n        setIsToday(true);\n      })\n      .catch((error) => console.log(error));\n  }, [location]);\n\n  const getForecast = useCallback(async () => {\n    axios\n      .get(`${process.env.REACT_APP_FORECAST_API}=${location}&days=${days}`)\n      .then((data) => {\n        setForecast(data.data);\n        setDailyForecast(data.data.forecast);\n        console.log(data.data.forecast);\n        setIsForecast(true);\n      })\n\n      .catch((error) => console.log(error));\n  }, [days, location]);\n\n  useEffect(() => {\n    if (location !== \"\") {\n      getToday();\n      getForecast();\n      dateToday();\n      getHistory();\n    }\n  }, [location, getForecast, getHistory, getToday]);\n\n  const setDegree = () => {\n    setDegrees(true);\n    setFarenheight(false);\n\n  };\n\n  const setFaren = () => {\n    setDegrees(false);\n    setFarenheight(true);\n  };\n  return (\n\n    <Grid container spacing={2} direction=\"row\" justify=\"space-around\">\n      {weather === null ? (\n          <>\n          <Typography className={classes.title}>No results found </Typography>\n          <Search/>\n</>\n      ):(\n          <>\n          <Grid item xs={12}>\n            {weather && isToday ? (\n                <>\n                  <Grid item xs={12}>\n                    <Box mt={2}>\n                      <Typography variant=\"h2\" className={classes.title}>\n                        Today in {weather.location.name}, {\"\"}{\" \"}\n                        {weather.location.country}\n                      </Typography>\n                    </Box>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.time}>\n                      Last Updated: {\"\"}\n                      {format(\n                          new Date(weather.current.last_updated),\n                          LONG_DATE_TIME_FORMAT\n                      )}\n                    </Typography>\n                  </Grid>\n\n                  <Grid container spacing={2} direction=\"row\" >\n                    <Grid item xs={9}>\n                      <Box mb={2} mt={2}>\n                        <Typography variant=\"h5\" className={classes.subTitle}>\n                          {format(\n                              new Date(weather.location.localtime),\n                              LONG_DATE_FORMAT\n                          )}\n                        </Typography>\n                      </Box>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <Button\n                          variant=\"text\"\n                          size=\"small\"\n                          onClick={setDegree}\n                          className={degrees ? classes.buttonActive : classes.buttonInactive}\n                      >\n                        {SYMBOLS.DEGREES}\n                      </Button>\n                      <Button\n                          variant=\"text\"\n                          size=\"small\"\n                          onClick={setFaren}\n                          className={farenheight ? classes.buttonActive : classes.buttonInactive}\n                      >\n                        {SYMBOLS.FAHRENHEIT}\n                      </Button>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={2} direction=\"row\" justify=\"space-around\">\n                    <Grid item md={1} xs={6}>\n                      <Box>\n                        <img\n                            className={classes.media}\n                            src={weather.current.condition.icon}\n                            alt=\"weather\"\n                        ></img>\n                      </Box>\n                    </Grid>\n                    <Grid item md={2} xs={6}>\n                      <Typography className={classes.degrees}>\n                        {degrees ? weather.current.temp_c + SYMBOLS.DEGREES : weather.current.temp_f + SYMBOLS.FAHRENHEIT}\n                      </Typography>\n                      <Typography className={classes.condition}>\n                        {weather.current.condition.text}\n                      </Typography>\n                    </Grid>\n\n                    <Grid item md={6} xs={12}>\n                      {forecast &&\n                      isForecast === true &&\n                      dailyForecast.forecastday.map((forecastday) => {\n                        return (\n                            <>\n                              {validDate === forecastday.date ? (\n                                  <Card className={classes.root} raised>\n                                    <CardContent>\n                                      <Box mb={2} ml={4} mr={-4}>\n                                        <Grid\n                                            container\n                                            spacing={2}\n                                            justify=\"space-between\"\n                                        >\n                                          <Grid item xs={4}>\n                                            <Typography className={classes.subTitle}>\n                                              {degrees\n                                                  ? forecastday.day.mintemp_c +\n                                                  SYMBOLS.DEGREES\n                                                  : forecastday.day.mintemp_f +\n                                                  SYMBOLS.FAHRENHEIT}{\" \"}\n                                            </Typography>\n                                            <Typography className={classes.subText}>\n                                              Low\n                                            </Typography>\n                                          </Grid>\n                                          <Grid item xs={4}>\n                                            <Typography className={classes.subTitle}>\n                                              {degrees\n                                                  ? forecastday.day.maxwind_mph + \" mph\"\n                                                  : forecastday.day.maxwind_kph + \" kph\"}\n                                            </Typography>\n                                            <Typography className={classes.subText}>\n                                              Wind\n                                            </Typography>\n                                          </Grid>\n                                          <Grid item xs={4}>\n                                            <Typography className={classes.subTitle}>\n                                              {forecastday.astro.sunrise}\n                                            </Typography>\n                                            <Typography className={classes.subText}>\n                                              Sunrise\n                                            </Typography>\n                                          </Grid>\n                                        </Grid>\n                                      </Box>\n\n                                      <Box ml={4} mr={-4}>\n                                        <Grid\n                                            container\n                                            spacing={2}\n                                            justify=\"space-between\"\n                                        >\n                                          <Grid item xs={4}>\n                                            <Typography className={classes.subTitle}>\n                                              {degrees\n                                                  ? forecastday.day.maxtemp_c +\n                                                  SYMBOLS.DEGREES\n                                                  : forecastday.day.maxtemp_f +\n                                                  SYMBOLS.FAHRENHEIT}\n                                            </Typography>\n                                            <Typography className={classes.subText}>\n                                              High\n                                            </Typography>\n                                          </Grid>\n                                          <Grid item xs={4}>\n                                            <Typography className={classes.subTitle}>\n                                              {degrees\n                                                  ? forecast.current.feelslike_c +\n                                                  SYMBOLS.DEGREES\n                                                  : forecast.current.feelslike_f +\n                                                  SYMBOLS.FAHRENHEIT}\n                                            </Typography>\n                                            <Typography className={classes.subText}>\n                                              Feels Like\n                                            </Typography>\n                                          </Grid>\n                                          <Grid item xs={4}>\n                                            <Typography className={classes.subTitle}>\n                                              {forecastday.astro.sunset}\n                                            </Typography>\n                                            <Typography className={classes.subText}>\n                                              Sunset\n                                            </Typography>\n                                          </Grid>\n                                        </Grid>\n                                      </Box>\n                                    </CardContent>\n                                  </Card>\n                              ) : null}\n                            </>\n                        );\n                      })}\n                    </Grid>\n                  </Grid>\n                </>\n            ) : (\n                <Typography>No Results Found</Typography>\n            )}\n          </Grid>\n\n          <Grid container spacing={2} direction=\"row\" justify=\"space-between\">\n      {isForecast === true ? (\n        <Grid item xs={12}>\n        <Grid item xs={12}>\n        <Typography variant=\"h2\" className={classes.title}>\n        Forecast\n        </Typography>\n        </Grid>\n        <Tabs\n        value={activeTab}\n        className={classes.tabs}\n        onChange={handleTabChange}\n        indicatorColor=\"primary\"\n        aria-label=\"Weather Tab\"\n        variant=\"scrollable\"\n        >\n        {dailyForecast.forecastday.map((forecastday, index) => {\n          return (\n              <Tab\n                  key={`${forecastday.date}_tab_${index}`}\n                  label={format(\n                      new Date(forecastday.date),\n                      SHORT_DATE_FORMAT\n                  )}\n              />\n          );\n        })}\n        </Tabs>\n        </Grid>\n        ) : (\n        <Typography>No forecast Available</Typography>\n        )}\n\n        <Grid container spacing={2}>\n        <Grid item xs={12}>\n        {forecast &&\n        isForecast === true &&\n        dailyForecast.forecastday.map((forecastday, index) => {\n          return (\n              <React.Fragment\n                  key={`display_weather_details_${forecastday.date}`}\n              >\n                {activeTab === index && (\n                    <HourlyWeather\n                        tabNumber={index}\n                        degrees={degrees}\n                        forecastday={forecastday}\n                    />\n                )}\n              </React.Fragment>\n          );\n        })}\n        </Grid>\n        </Grid>\n        </Grid>\n\n        <Grid container>\n        {/* HISTORY */}\n        {history && isHistory ? (\n\n              <Grid item xs={12}>\n                <Box mt={4} mb={2}>\n                  <Typography variant=\"h2\" className={classes.title}>\n                    View History\n                  </Typography>\n                </Box>\n                <Grid item xs={12}>\n                  <KeyboardDatePicker\n                      label=\"Select Date\"\n                      clearable\n                      minDate={new Date().getDate()-7}\n                      maxDate={new Date()}\n                      format=\"yyyy/MM/dd\"\n                      value={date}\n                      onChange={(date) => handleDateChange(date)}\n                  />\n                </Grid>\n\n                <History\n                    degrees={degrees}\n                    historyForecast={historyForecast}\n                    isHistory={true}\n                />\n              </Grid>\n\n        ) : (\n            <Typography>lol</Typography>\n        )}\n\n        </Grid>\n          </>\n      )}\n    </Grid>\n  );\n};\nexport default SearchDetails;\n"]},"metadata":{},"sourceType":"module"}