{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulcunningham/react-projects/weather-app/src/Pages/Favourites/Favourites.js\",\n    _s = $RefreshSig$();\n\nimport { Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState, useCallback } from \"react\";\n\nconst Favourites = () => {\n  _s();\n\n  const [favourite, setFavourite] = useState(false);\n  const [location, setLocation] = useState([]);\n  const [weather, setWeather] = useState(null);\n  const [isToday, setIsToday] = useState(false);\n  useEffect(() => {\n    try {\n      const item = Object.keys(localStorage);\n      console.log(item);\n\n      if (item) {\n        const value = Object.values(localStorage);\n        setLocation(value);\n        console.log(value);\n        setFavourite(true);\n      }\n    } catch (error) {\n      setFavourite(false);\n      console.log(error);\n    }\n  }, []);\n  console.log(location);\n  const getToday = useCallback(async () => {\n    axios.get(`${process.env.REACT_APP_WEATHER_API}=${location}`).then(data => {\n      setWeather(data.data);\n      setIsToday(true);\n    }).catch(error => console.log(error));\n  }, [location]);\n  useEffect(() => {\n    if (favourite === true) {\n      getToday();\n    }\n  }, [favourite, getToday]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Your Favourites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), favourite ? location.map(name => {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, this);\n    }) : null]\n  }, void 0, true);\n};\n\n_s(Favourites, \"VeuokcwBG4+WWAn3s9HiI64FJTI=\");\n\n_c = Favourites;\nexport default Favourites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favourites\");","map":{"version":3,"sources":["/Users/paulcunningham/react-projects/weather-app/src/Pages/Favourites/Favourites.js"],"names":["Typography","axios","React","useEffect","useState","useCallback","Favourites","favourite","setFavourite","location","setLocation","weather","setWeather","isToday","setIsToday","item","Object","keys","localStorage","console","log","value","values","error","getToday","get","process","env","REACT_APP_WEATHER_API","then","data","catch","map","name"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACF,YAAMY,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYC,YAAZ,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AACA,UAAIA,IAAJ,EAAU;AACR,cAAMM,KAAK,GAAGL,MAAM,CAACM,MAAP,CAAcJ,YAAd,CAAd;AACAR,QAAAA,WAAW,CAACW,KAAD,CAAX;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAb,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,KATD,CASE,OAAOe,KAAP,EAAc;AACdf,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD;AACF,GAdQ,EAcN,EAdM,CAAT;AAeAJ,EAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AAEA,QAAMe,QAAQ,GAAGnB,WAAW,CAAC,YAAY;AACvCJ,IAAAA,KAAK,CACFwB,GADH,CACQ,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,IAAGnB,QAAS,EADxD,EAEGoB,IAFH,CAESC,IAAD,IAAU;AACdlB,MAAAA,UAAU,CAACkB,IAAI,CAACA,IAAN,CAAV;AACAhB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KALH,EAMGiB,KANH,CAMUR,KAAD,IAAWJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,CANpB;AAOD,GAR2B,EAQzB,CAACd,QAAD,CARyB,CAA5B;AAUAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,SAAS,KAAK,IAAlB,EAAwB;AACtBiB,MAAAA,QAAQ;AACT;AACF,GAJQ,EAIN,CAACjB,SAAD,EAAYiB,QAAZ,CAJM,CAAT;AAMA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGjB,SAAS,GACNE,QAAQ,CAACuB,GAAT,CAAcC,IAAD,IAAU;AACrB,0BAAO,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA,kBAA0BA;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,CADM,GAIN,IANN;AAAA,kBADF;AAUD,CAjDD;;GAAM3B,U;;KAAAA,U;AAmDN,eAAeA,UAAf","sourcesContent":["import { Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nconst Favourites = () => {\n  const [favourite, setFavourite] = useState(false);\n  const [location, setLocation] = useState([]);\n  const [weather, setWeather] = useState(null);\n  const [isToday, setIsToday] = useState(false);\n\n  useEffect(() => {\n    try {\n      const item = Object.keys(localStorage);\n      console.log(item);\n      if (item) {\n        const value = Object.values(localStorage);\n        setLocation(value);\n        console.log(value);\n        setFavourite(true);\n      }\n    } catch (error) {\n      setFavourite(false);\n      console.log(error);\n    }\n  }, []);\n  console.log(location);\n\n  const getToday = useCallback(async () => {\n    axios\n      .get(`${process.env.REACT_APP_WEATHER_API}=${location}`)\n      .then((data) => {\n        setWeather(data.data);\n        setIsToday(true);\n      })\n      .catch((error) => console.log(error));\n  }, [location]);\n\n  useEffect(() => {\n    if (favourite === true) {\n      getToday();\n    }\n  }, [favourite, getToday]);\n\n  return (\n    <>\n      <Typography>Your Favourites</Typography>\n      {favourite\n        ? location.map((name) => {\n            return <Typography variant=\"h2\">{name}</Typography>;\n          })\n        : null}\n    </>\n  );\n};\n\nexport default Favourites;\n"]},"metadata":{},"sourceType":"module"}